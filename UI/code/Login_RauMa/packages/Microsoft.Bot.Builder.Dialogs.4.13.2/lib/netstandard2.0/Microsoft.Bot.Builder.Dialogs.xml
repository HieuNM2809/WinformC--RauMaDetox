<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.Bot.Builder.Dialogs</name>
    </assembly>
    <members>
        <member name="T:Microsoft.Bot.Builder.Dialogs.BeginSkillDialogOptions">
            <summary>
            A class with dialog arguments for a <see cref="T:Microsoft.Bot.Builder.Dialogs.SkillDialog"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.BeginSkillDialogOptions.Activity">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Bot.Builder.Dialogs.BeginSkillDialogOptions.Activity"/> to send to the skill.
            </summary>
            <value>
            The <see cref="P:Microsoft.Bot.Builder.Dialogs.BeginSkillDialogOptions.Activity"/> to send to the skill.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.Channel">
            <summary>
            Methods for determining channel specific functionality.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Channel.SupportsSuggestedActions(System.String,System.Int32)">
            <summary>
            Determine if a number of Suggested Actions are supported by a Channel.
            </summary>
            <param name="channelId">The Channel to check the if Suggested Actions are supported in.</param>
            <param name="buttonCnt">(Optional) The number of Suggested Actions to check for the Channel.</param>
            <returns>True if the Channel supports the buttonCnt total Suggested Actions, False if the Channel does not support that number of Suggested Actions.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Channel.SupportsCardActions(System.String,System.Int32)">
            <summary>
            Determine if a number of Card Actions are supported by a Channel.
            </summary>
            <param name="channelId">The Channel to check if the Card Actions are supported in.</param>
            <param name="buttonCnt">(Optional) The number of Card Actions to check for the Channel.</param>
            <returns>True if the Channel supports the buttonCnt total Card Actions, False if the Channel does not support that number of Card Actions.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Channel.HasMessageFeed(System.String)">
            <summary>
            Determine if a Channel has a Message Feed.
            </summary>
            <param name="channelId">The Channel to check for Message Feed.</param>
            <returns>True if the Channel has a Message Feed, False if it does not.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Channel.MaxActionTitleLength(System.String)">
            <summary>
            Maximum length allowed for Action Titles.
            </summary>
            <param name="channelId">The Channel to determine Maximum Action Title Length.</param>
            <returns>The total number of characters allowed for an Action Title on a specific Channel.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Channel.GetChannelId(Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Get the Channel Id from the current Activity on the Turn Context.
            </summary>
            <param name="turnContext">The Turn Context to retrieve the Activity's Channel Id from.</param>
            <returns>The Channel Id from the Turn Context's Activity.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.Channel.Channels">
            <summary>
            Ids of the channels supported by the Bot Builder.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.Choice">
            <summary>
            Represents a choice for a choice prompt.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Choice.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.Choice"/> class to add a choice to a choice prompt.
            </summary>
            <param name="value">The value to return when the choice is selected.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Choice.Value">
            <summary>
            Gets or sets the value to return when selected.
            </summary>
            <value>
            The value to return when selected.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Choice.Action">
            <summary>
            Gets or sets the action to use when rendering the choice as a suggested action or hero card.
            This is optional.
            </summary>
            <value>
            The action to use when rendering the choice as a suggested action or hero card.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Choice.Synonyms">
            <summary>
            Gets or sets the list of synonyms to recognize in addition to the value. This is optional.
            </summary>
            <value>
            The list of synonyms to recognize in addition to the value.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory">
            <summary>
            Assists with formatting a message activity that contains a list of choices.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.ForChannel(System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},System.String,System.String,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions)">
            <summary>
            Creates a message activity that includes a list of choices formatted based on the capabilities of a given channel.
            </summary>
            <param name="channelId">A channel ID. The <see cref="T:Microsoft.Bot.Connector.Channels"/> class contains known channel IDs.</param>
            <param name="list">The list of choices to include.</param>
            <param name="text">Optional, the text of the message to send.</param>
            <param name="speak">Optional, the text to be spoken by your bot on a speech-enabled channel.</param>
            <param name="options">Optional, the formatting options to use when rendering as a list.</param>
            <returns>The created message activity.</returns>
            <remarks>The algorithm prefers to format the supplied list of choices as suggested actions but can decide
            to use a text based list if suggested actions aren't natively supported by the channel, there are too many
            choices for the channel to display, or the title of any choice is too long.
            <para>If the algorithm decides to use a list, for 3 or fewer choices with short titles it will use an inline
            list; otherwise, a numbered list.</para></remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.Inline(System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},System.String,System.String,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions)">
            <summary>
            Creates a message activity that includes a list of choices formatted as an inline list.
            </summary>
            <param name="choices">The list of choices to include.</param>
            <param name="text">Optional, the text of the message to send.</param>
            <param name="speak">Optional, the text to be spoken by your bot on a speech-enabled channel.</param>
            <param name="options">Optional, the formatting options to use when rendering as a list.</param>
            <returns>The created message activity.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.List(System.Collections.Generic.IList{System.String},System.String,System.String,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions)">
            <summary>
            Creates a message activity that includes a list of choices formatted as a numbered or bulleted list.
            </summary>
            <param name="choices">The list of choices to include.</param>
            <param name="text">Optional, the text of the message to send.</param>
            <param name="speak">Optional, the text to be spoken by your bot on a speech-enabled channel.</param>
            <param name="options">Optional, the formatting options to use when rendering as a list.</param>
            <returns>The created message activity.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.List(System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},System.String,System.String,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions)">
            <summary>
            Creates a message activity containing a list of choices that has been formatted as a numbered or bulleted list.
            </summary>
            <param name="choices">The list of choices to render.</param>
            <param name="text">Optional, text of the message.</param>
            <param name="speak">Optional, SSML text to be spoken by the bot on a speech-enabled channel.</param>
            <param name="options">Optional, formatting options to tweak the rendering of the list.</param>
            <returns>An activity with choices as a numbered or bulleted list.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.SuggestedAction(System.Collections.Generic.IList{System.String},System.String,System.String)">
            <summary>
            Creates a message activity containing a list of choices that have been added as suggested actions.
            </summary>
            <param name="choices">List of strings representing the choices to add.</param>
            <param name="text">Optional, text of the message.</param>
            <param name="speak">Optional, SSML text to be spoken by the bot on a speech-enabled channel.</param>
            <returns>An activity with choices as suggested actions.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.SuggestedAction(System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},System.String,System.String)">
            <summary>
            Creates a message activity containing a list of choices that have been added as suggested actions.
            </summary>
            <param name="choices">The list of choices to add.</param>
            <param name="text">Optional, text of the message.</param>
            <param name="speak">Optional, SSML text to be spoken by the bot on a speech-enabled channel.</param>
            <returns>An activity with choices as suggested actions.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.HeroCard(System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},System.String,System.String)">
            <summary>
            Creates a message activity that includes a list of choices that have been added as `HeroCard`'s.
            </summary>
            <param name="choices">The list of choices to add.</param>
            <param name="text">Optional, text of the message.</param>
            <param name="speak">Optional, SSML text to be spoken by the bot on a speech-enabled channel.</param>
            <returns>An activity with choices as HeroCard with buttons.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory.ToChoices(System.Collections.Generic.IList{System.String})">
            <summary>
            Takes a list of strings and returns them as <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.Choice"/>.
            </summary>
            <param name="choices">The list of choices to add.</param>
            <returns>A list of choices.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions">
            <summary>
            Contains formatting options for presenting a list of choices.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions.#ctor(System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions"/> class.
            Refer to the code in teh ConfirmPrompt for an example of usage.
            </summary>
            <param name="inlineSeparator">The inline seperator value.</param>
            <param name="inlineOr">The inline or value.</param>
            <param name="inlineOrMore">The inline or more value.</param>
            <param name="includeNumbers">Flag indicating whether to include numbers as a choice.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions.InlineSeparator">
            <summary>
            Gets or sets the character used to separate individual choices when there are more than 2 choices.
            The default value is `", "`. This is optional.
            </summary>
            <value>
            The character used to separate individual choices when there are more than 2 choices.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions.InlineOr">
            <summary>
            Gets or sets the separator inserted between the choices when their are only 2 choices. The default
            value is `" or "`. This is optional.
            </summary>
            <value>
            The separator inserted between the choices when their are only 2 choices.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions.InlineOrMore">
            <summary>
            Gets or sets the separator inserted between the last 2 choices when their are more than 2 choices.
            The default value is `", or "`. This is optional.
            </summary>
            <value>
            The separator inserted between the last 2 choices when their are more than 2 choices.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions.IncludeNumbers">
            <summary>
            Gets or sets a value indicating whether an inline and list style choices will be prefixed with the index of the
            choice as in "1. choice". If <see langword="false"/>, the list style will use a bulleted list instead.The default value is <see langword="true"/>.
            </summary>
            <value>
            A <c>true</c>if an inline and list style choices will be prefixed with the index of the
            choice as in "1. choice"; otherwise a <c>false</c> and the list style will use a bulleted list instead.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceRecognizers">
            <summary>
            Contains methods for matching user input against a list of choices.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceRecognizers.RecognizeChoices(System.String,System.Collections.Generic.IList{System.String},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)">
            <summary>
            Matches user input against a list of choices.
            </summary>
            <param name="utterance">The input.</param>
            <param name="choices">The list of choices.</param>
            <param name="options">Optional, options to control the recognition strategy.</param>
            <returns>A list of found choices, sorted by most relevant first.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceRecognizers.RecognizeChoices(System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)">
            <summary>
            Matches user input against a list of choices.
            </summary>
            <param name="utterance">The input.</param>
            <param name="list">The list of choices.</param>
            <param name="options">Optional, options to control the recognition strategy.</param>
            <returns>A list of found choices, sorted by most relevant first.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.Find">
            <summary>
            Contains methods for matching user input against a list of choices.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Find.FindChoices(System.String,System.Collections.Generic.IList{System.String},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)">
            <summary>
            Matches user input against a list of choices.
            </summary>
            <param name="utterance">The input.</param>
            <param name="choices">The list of choices.</param>
            <param name="options">Optional, options to control the recognition strategy.</param>
            <returns>A list of found choices, sorted by most relevant first.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Find.FindChoices(System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)">
            <summary>
            Matches user input against a list of choices.
            </summary>
            <param name="utterance">The input.</param>
            <param name="choices">The list of choices.</param>
            <param name="options">Optional, options to control the recognition strategy.</param>
            <returns>A list of found choices, sorted by most relevant first.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Find.FindValues(System.String,System.Collections.Generic.List{Microsoft.Bot.Builder.Dialogs.Choices.SortedValue},Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions)">
            <summary>This method is internal and should not be used.</summary>
            <remarks>Please use <see cref="M:Microsoft.Bot.Builder.Dialogs.Choices.Find.FindChoices(System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)"/> or
            <see cref="M:Microsoft.Bot.Builder.Dialogs.Choices.Find.FindChoices(System.String,System.Collections.Generic.IList{System.String},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)"/> instead.</remarks>
            <param name="utterance">The input.</param>
            <param name="values">The values.</param>
            <param name="options">The options for the search.</param>
            <returns>A list of found values.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions">
            <summary>
            Contains options to control how input is matched against a list of choices.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions.NoValue">
            <summary>
            Gets or sets a value indicating whether the choices value will NOT be search over.
            The default is <c>false</c>. This is optional.
            </summary>
            <value>
            A <c>true</c> if the choices value will NOT be search over; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions.NoAction">
            <summary>
            Gets or sets a value indicating whether the title of the choices action will NOT be searched over.
            The default is <c>false</c>. This is optional.
            </summary>
            <value>
            A <c>true</c> if the title of the choices action will NOT be searched over; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions.RecognizeNumbers">
            <summary>
            Gets or sets a value indicating whether the recognizer should check for Numbers using the NumberRecognizer's
            NumberModel.
            </summary>
            <value>
            Default is <c>true</c>.  If <c>false</c>, the Number Model will not be used to check the utterance for numbers.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions.RecognizeOrdinals">
            <summary>
            Gets or sets a value indicating whether the recognizer should check for Ordinal Numbers using the NumberRecognizer's
            OrdinalModel.
            </summary>
            <value>
            Default is <c>true</c>.  If <c>false</c>, the Ordinal Model will not be used to check the utterance for ordinal numbers.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions">
            <summary>
            Contains options used to control how choices are recognized in a users utterance.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions.AllowPartialMatches">
            <summary>
            Gets or sets a value indicating whether only some of the tokens in a value need to exist to be considered
            a match. The default value is "false". This is optional.
            </summary>
            <value>
            A <c>true</c> if only some of the tokens in a value need to exist to be considered; otherwise <c>false</c>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions.Locale">
            <summary>
            Gets or sets the locale/culture code of the utterance. The default is `en-US`. This is optional.
            </summary>
            <value>
            The locale/culture code of the utterance.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions.MaxTokenDistance">
            <summary>
            Gets or sets the maximum tokens allowed between two matched tokens in the utterance. So with
            a max distance of 2 the value "second last" would match the utterance "second from the last"
            but it wouldn't match "Wait a second. That's not the last one is it?".
            The default value is "2".
            </summary>
            <value>
            The maximum tokens allowed between two matched tokens in the utterance.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FindValuesOptions.Tokenizer">
            <summary>
            Gets or sets the tokenizer to use when parsing the utterance and values being recognized.
            </summary>
            <value>
            The tokenizer to use when parsing the utterance and values being recognized.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice">
            <summary>
            Represents a result from matching user input against a list of choices.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice.Value">
            <summary>
            Gets or sets the value of the choice that was matched.
            </summary>
            <value>
            The value of the choice that was matched.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice.Index">
            <summary>
            Gets or sets the choices index within the list of choices that was searched over.
            </summary>
            <value>
            The choices index within the list of choices that was searched over.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice.Score">
            <summary>
            Gets or sets the accuracy with which the synonym matched the specified portion of the utterance. A
            value of 1.0 would indicate a perfect match.
            </summary>
            <value>
            The accuracy with which the synonym matched the specified portion of the utterance. A
            value of 1.0 would indicate a perfect match.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice.Synonym">
            <summary>
            Gets or sets the synonym that was matched. This is optional.
            </summary>
            <value>
            The synonym that was matched.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.FoundValue">
            <summary>This class is internal and should not be used.</summary>
            <remarks>Please use <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice"/> instead.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundValue.Value">
            <summary>
            Gets or sets the value that was matched.
            </summary>
            <value>
            The value that was matched.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundValue.Index">
            <summary>
            Gets or sets the index of the value that was matched.
            </summary>
            <value>
            The index of the value that was matched.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.FoundValue.Score">
            <summary>
            Gets or sets the accuracy with which the value matched the specified portion of the utterance. A
            value of 1.0 would indicate a perfect match.
            </summary>
            <value>
            The accuracy with which the value matched the specified portion of the utterance. A
            value of 1.0 would indicate a perfect match.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle">
            <summary>
            Controls the way that choices for a `ChoicePrompt` or yes/no options for a `ConfirmPrompt` are
            presented to a user.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle.None">
            <summary>
            Don't include any choices for prompt.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle.Auto">
            <summary>
            Automatically select the appropriate style for the current channel.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle.Inline">
            <summary>
            Add choices to prompt as an inline list.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle.List">
            <summary>
            Add choices to prompt as a numbered list.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle.SuggestedAction">
            <summary>
            Add choices to prompt as suggested actions.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle.HeroCard">
            <summary>
            Add choices to prompt as a HeroCard with buttons.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1">
            <summary>
            Contains recognition result information.
            </summary>
            <typeparam name="T">The type of object recognized.</typeparam>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1.Text">
            <summary>
            Gets or sets the substring of the input that was recognized.
            </summary>
            <value>The substring of the input that was recognized.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1.Start">
            <summary>
            Gets or sets the start character position of the recognized substring.
            </summary>
            <value>The start character position of the recognized substring.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1.End">
            <summary>
            Gets or sets the end character position of the recognized substring.
            </summary>
            <value>The end character position of the recognized substring.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1.TypeName">
            <summary>
            Gets or sets the type of entity that was recognized.
            </summary>
            <value>The type of entity that was recognized.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.ModelResult`1.Resolution">
            <summary>
            Gets or sets the recognized object.
            </summary>
            <value>The recognized object.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.SortedValue">
            <summary>
            A value that can be sorted and still refer to its original position with a source array.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.SortedValue.Value">
            <summary>
            Gets or sets the value that will be sorted.
            </summary>
            <value>
            The value that will be sorted.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.SortedValue.Index">
            <summary>
            Gets or sets the values original position within its unsorted array.
            </summary>
            <value>
            The values original position within its unsorted array.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.Token">
            <summary>
            Represents an individual token, such as a word in an input string.
            </summary>
            <seealso cref="T:Microsoft.Bot.Builder.Dialogs.Choices.Tokenizer"/>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Token.Start">
            <summary>
            Gets or sets the index of the first character of the token within the input.
            </summary>
            <value>The index of the first character of the token.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Token.End">
            <summary>
            Gets or sets the index of the last character of the token within the input.
            </summary>
            <value>The index of the last character of the token.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Token.Text">
            <summary>
            Gets or sets the original text of the token.
            </summary>
            <value>The original text of the token.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Token.Normalized">
            <summary>
            Gets or sets a normalized version of the token.
            </summary>
            <value>A normalized version of the token.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.TokenizerFunction">
            <summary>
            Represents a callback method that can break a string into its component tokens.
            </summary>
            <param name="text">The input text.</param>
            <param name="locale">Optional, identifies the locale of the input text.</param>
            <returns>The list of the found <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.Token"/> objects.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Choices.Tokenizer">
            <summary>
            Provides a default tokenizer implementation.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Choices.Tokenizer.DefaultTokenizer">
            <summary>
            Gets the default <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.TokenizerFunction"/> implementation.
            </summary>
            <value>The default <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.TokenizerFunction"/> implementation.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Choices.Tokenizer.DefaultTokenizerImpl(System.String,System.String)">
            <summary>
            Simple tokenizer that breaks on spaces and punctuation. The only normalization done is to lowercase.
            </summary>
            <param name="text">The input text.</param>
            <param name="locale">Optional, identifies the locale of the input text.</param>
            <returns>A list of tokens.</returns>
            <remarks>This is an exact port of the JavaScript implementation of the algorithm except that here
            the .NET library functions are used in place of the JavaScript string code point functions.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog">
            <summary>
            A <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> that is composed of other dialogs.
            </summary>
            <remarks>A component dialog has an inner <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> and <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>,
            which provides an inner dialog stack that is hidden from the parent dialog.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ComponentDialog.PersistedDialogState">
            <summary>
            The id for the persisted dialog state.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> class.
            </summary>
            <param name="dialogId">The ID to assign to the new dialog within the parent dialog set.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ComponentDialog.InitialDialogId">
            <summary>
            Gets or sets the id assigned to the initial dialog.
            </summary>
            <value>The id of the initial dialog.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog is started and pushed onto the parent's dialog stack.
            </summary>
            <param name="outerDc">The parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="options">Optional, initial information to pass to the dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnBeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
             <summary>
             Called when the dialog is _continued_, where it is the active dialog and the
             user replies with a new activity.
             </summary>
             <param name="outerDc">The parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
             <remarks>If the task is successful, the result indicates whether the dialog is still
             active after the turn has been processed by the dialog. The result may also contain a
             return value.
            
             If this method is *not* overridden, the component dialog calls the
             <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ContinueDialogAsync(System.Threading.CancellationToken)"/> method on its inner
             dialog context. If the inner dialog stack is empty, the component dialog ends, and if
             a <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.Result"/> is available, the component dialog uses that as
             its return value.
             </remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ContinueDialogAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
             <summary>
             Called when a child dialog on the parent's dialog stack completed this turn, returning
             control to this dialog component.
             </summary>
             <param name="outerDc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
             <param name="reason">Reason why the dialog resumed.</param>
             <param name="result">Optional, value returned from the dialog that was called. The type
             of the value returned is dependent on the child dialog.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
             <remarks>If the task is successful, the result indicates whether this dialog is still
             active after this dialog turn has been processed.
            
             Generally, the child dialog was started with a call to
             <see cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/> in the parent's
             context. However, if the
             <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/> method
             is called, the logical child dialog may be different than the original.
            
             If this method is *not* overridden, the dialog automatically calls its
             <see cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)"/> when
             the user replies.
             </remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog should re-prompt the user for input.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information for this dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnRepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.RepromptDialogAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog is ending.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information associated with the instance of this component
            dialog on its parent's dialog stack.</param>
            <param name="reason">Reason why the dialog ended.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>When this method is called from the parent dialog's context, the component dialog
            cancels all of the dialogs on its inner dialog stack before ending.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnEndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.AddDialog(Microsoft.Bot.Builder.Dialogs.Dialog)">
            <summary>
            Adds a new <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> to the component dialog and returns the updated component.
            </summary>
            <param name="dialog">The dialog to add.</param>
            <returns>The <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> after the operation is complete.</returns>
            <remarks>The added dialog's <see cref="P:Microsoft.Bot.Builder.Dialogs.Dialog.TelemetryClient"/> is set to the
            <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContainer.TelemetryClient"/> of the component dialog.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.CreateChildContext(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Creates an inner <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.
            </summary>
            <param name="dc">The parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.</param>
            <returns>The created Dialog Context.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.EnsureInitializedAsync(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Ensures the dialog is initialized.
            </summary>
            <param name="outerDc">The outer <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnInitializeAsync(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Initilizes the dialog.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> to initialize.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnBeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
             <summary>
             Called when the dialog is started and pushed onto the parent's dialog stack.
             </summary>
             <param name="innerDc">The inner <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
             <param name="options">Optional, initial information to pass to the dialog.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
             <remarks>If the task is successful, the result indicates whether the dialog is still
             active after the turn has been processed by the dialog.
            
             By default, this calls the
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/> method
             of the component dialog's initial dialog, as defined by <see cref="P:Microsoft.Bot.Builder.Dialogs.ComponentDialog.InitialDialogId"/>.
            
             Override this method in a derived class to implement interrupt logic.</remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
             <summary>
             Called when the dialog is _continued_, where it is the active dialog and the
             user replies with a new activity.
             </summary>
             <param name="innerDc">The inner <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
             <remarks>If the task is successful, the result indicates whether the dialog is still
             active after the turn has been processed by the dialog. The result may also contain a
             return value.
            
             By default, this calls the currently active inner dialog's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/> method.
            
             Override this method in a derived class to implement interrupt logic.</remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnEndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog is ending.
            </summary>
            <param name="context">The context object for this turn.</param>
            <param name="instance">State information associated with the inner dialog stack of this
            component dialog.</param>
            <param name="reason">Reason why the dialog ended.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>Override this method in a derived class to implement any additional logic that
            should happen at the component level, after all inner dialogs have been canceled.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.OnRepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog should re-prompt the user for input.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information associated with the inner dialog stack of this
            component dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>Override this method in a derived class to implement any additional logic that
            should happen at the component level, after the re-prompt operation completes for the inner
            dialog.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.EndComponentAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
             <summary>
             Ends the component dialog in its parent's context.
             </summary>
             <param name="outerDc">The parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
             <param name="result">Optional, value to return from the dialog component to the parent context.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A task that represents the work queued to execute.</returns>
             <remarks>If the task is successful, the result indicates that the dialog ended after the
             turn was processed by the dialog.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)"/>
             method to return a result to the parent dialog. If the parent dialog does not implement
             `ResumeDialogAsync`, then the parent will end, too, and the result is passed to the next
             parent context, if one exists.
            
             The returned <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult"/> contains the return value in its
             <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.Result"/> property.</remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport">
            <summary>
            Debugger support for <see cref="T:Microsoft.Bot.Builder.ITurnContext"/>, <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>. 
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.SourceMap">
            <summary>
            Gets or sets the source map instance.
            </summary>
            <value>The <see cref="P:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.SourceMap"/> instance.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.GetDebugger(Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Extension method to get IDialogDebugger from TurnContext.
            </summary>
            <param name="context">turnContext.</param>
            <returns>IDialogDebugger.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.GetDebugger(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Extension method to get IDialogDebugger from DialogContext.
            </summary>
            <param name="context">dialogContext.</param>
            <returns>IDialogDebugger.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.DebuggerStepAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.Dialog,System.String,System.Threading.CancellationToken)">
            <summary>
            Call into active IDialogDebugger and let it know that we are at given point in the dialog.
            </summary>
            <param name="context">dialogContext.</param>
            <param name="dialog">dialog.</param>
            <param name="more">label.</param>
            <param name="cancellationToken">cancellation token for async operations.</param>
            <returns>async task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.DebuggerStepAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.IRecognizer,System.String,System.Threading.CancellationToken)">
            <summary>
            Call into active IDialogDebugger and let it know that we are at given point in the Recognizer.
            </summary>
            <param name="context">dialogContext.</param>
            <param name="recognizer">recognizer.</param>
            <param name="more">label.</param>
            <param name="cancellationToken">cancellation token for async operations.</param>
            <returns>async task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.DebugSupport.DebuggerStepAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.Recognizer,System.String,System.Threading.CancellationToken)">
            <summary>
            Call into active IDialogDebugger and let it know that we are at given point in the Recognizer.
            </summary>
            <param name="context">dialogContext.</param>
            <param name="recognizer">recognizer.</param>
            <param name="more">label.</param>
            <param name="cancellationToken">cancellation token for async operations.</param>
            <returns>async task.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.IDialogDebugger">
            <summary>
            Defines the Dialog Debugger interface.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.IDialogDebugger.StepAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            Task representing information in a given point of an item.
            </summary>
            <param name="context">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="item">Object item in debugger.</param>
            <param name="more">Additional information.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.IDebugger">
            <summary>
            Defines the Debugger interface.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.IDebugger.OutputAsync(System.String,System.Object,System.Object,System.Threading.CancellationToken)">
            <summary>
            Task representing a debug output.
            </summary>
            <param name="text">Text to output.</param>
            <param name="item">Object item in debugger.</param>
            <param name="value">Value of the object to output.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.ISourceMap">
            <summary>
            A source map is a dictionary object -> sourceCode.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.ISourceMap.Add(System.Object,Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange)">
            <summary>
            Add an object and SourceRange information describing where the object was defined.
            </summary>
            <param name="item">item to record.</param>
            <param name="range">sourceBlock range for the object.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.ISourceMap.TryGetValue(System.Object,Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange@)">
            <summary>
            Look up the SourceRange information for an object.
            </summary>
            <param name="item">object to look up.</param>
            <param name="range">place to return the SourceRange for the object.</param>
            <returns>true if found.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.NullDialogDebugger">
            <summary>
            Default Dialog Debugger which simply ignores step calls for the IDialogDebuggerinterface.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Debugging.NullDialogDebugger.Instance">
            <summary>
            Initializes a read-only new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.NullDialogDebugger"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.NullDialogDebugger.TraceSteps">
            <summary>
            Gets or sets a value indicating whether to trace steps.
            </summary>
            <value>
            true ot enable tracing steps.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap">
            <summary>
            NullSourceMap is used to disable tracking of source code Ranges.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap.Instance">
            <summary>
            Initializes a read-only new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap.Add(System.Object,Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange)">
            <summary>
            Add an object and SourceRange information describing where the object was defined.
            </summary>
            <param name="item">Object item to record.</param>
            <param name="range"><see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> for the object.</param>
            <remarks>For a <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap"/> it does nothing.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap.TryGetValue(System.Object,Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange@)">
            <summary>
            Look up the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> information for an object.
            </summary>
            <param name="item">Object to look up.</param>
            <param name="range">Place to return the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> for the object.</param>
            <returns><c>true</c> if found.</returns>
            <remarks>For a <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.NullSourceMap"/> always returns <c>false</c>.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext">
            <summary>
            SourceContext used to build sourcemap of metadata about the call relationships between assets.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourceContext.CallStack">
            <summary>
            Gets the stack of SourceRange objects which represent the calling relationships between declarative assets.
            </summary>
            <value>
            The stack of SourceRange objects which represent the calling relationships between declarative assets.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceMap">
            <summary>
            A simple ISourceMap of objects -> SourceRange.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Debugging.SourceMap.Instance">
            <summary>
            Initializes a read-only new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceMap"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceMap.Add(System.Object,Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint">
            <summary>
            SourcePoint represents the line and character index into the source code or declarative object backing an object in memory.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/> class.
            </summary>
            <param name="lineIndex">line index.</param>
            <param name="charIndex">char index.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.LineIndex">
            <summary>
            Gets or sets line number into the source file.
            </summary>
            <value>
            Line number into the source file.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.CharIndex">
            <summary>
            Gets or sets char index on the line from lineindex.
            </summary>
            <value>
            Char index on the line from lineindex.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.From(Newtonsoft.Json.JsonReader)">
            <summary>
            Get point from JsonReader.
            </summary>
            <param name="reader">json reader.</param>
            <returns>Point for start of current json reader.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.ReadObjectWithSourcePoints``1(Newtonsoft.Json.JsonReader,System.Func{Newtonsoft.Json.JsonReader,``0},Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint@,Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint@)">
            <summary>
            Read object as T and return the start/end points for the object that was read.
            </summary>
            <typeparam name="T">type of object to deserialize.</typeparam>
            <param name="reader">reader to read from.</param>
            <param name="read">function to process during reading.</param>
            <param name="start">result start point for object.</param>
            <param name="end">result end point for object.</param>
            <returns>deserialized object as type(T).</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.DeepClone">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>. All properties are recursively cloned.
            </summary>
            <returns>A new instace of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.Equals(System.Object)">
            <summary>
            Indicates wether the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/> is equal to another object.
            </summary>
            <param name="obj">An object to compare with this <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.</param>
            <returns><c>true</c> if the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/> is equal to the object parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.Equals(Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint)">
            <summary>
            Indicates wether the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/> is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.</param>
            <returns><c>true</c> if the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/> is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint.GetHashCode">
            <summary>
            Creates a hash code for the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourcePoint"/>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange">
            <summary>
            Range represents a file, starting point and end point of text .
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> class.
            </summary>
            <param name="path">path.</param>
            <param name="startLine">start line index.</param>
            <param name="startChar">start char index.</param>
            <param name="endLine">end line index.</param>
            <param name="endChar">end line char.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.Designer">
            <summary>
            Gets or sets the optional designer information.
            </summary>
            <value>
            Optional designer information.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.Path">
            <summary>
            Gets or sets path to source file.
            </summary>
            <value>
            Path to source file.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.StartPoint">
            <summary>
            Gets or sets start point in the source file.
            </summary>
            <value>
            Start point in the source file.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.EndPoint">
            <summary>
            Gets or sets end point in the source file.
            </summary>
            <value>
            End point in the source file.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.ToString">
            <summary>
            Returns a string that represents the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.
            </summary>
            <returns>A string that represents the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.DeepClone">
            <summary>
            Creates a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>. All properties are recursively cloned.
            </summary>
            <returns>A new instace of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.Equals(System.Object)">
            <summary>
            Indicates wether the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> is equal to another object.
            </summary>
            <param name="obj">An object to compare with this <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.</param>
            <returns><c>true</c> if the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> is equal to the object parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.Equals(Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange)">
            <summary>
            Indicates wether the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.</param>
            <returns><c>true</c> if the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/> is equal to the other parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange.GetHashCode">
            <summary>
            Creates a hash code for the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.
            </summary>
            <returns>A hash code for the current <see cref="T:Microsoft.Bot.Builder.Dialogs.Debugging.SourceRange"/>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Dialog">
            <summary>
            Base class for all dialogs.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Dialog.EndOfTurn">
            <summary>
            A <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult"/> that indicates that the current dialog is still
            active and waiting for input from the user next turn.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> class.
            Called from constructors in derived classes to initialize the <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this dialog.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Dialog.Id">
            <summary>
            Gets or sets id for the dialog.
            </summary>
            <value>
            Id for the dialog.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Dialog.TelemetryClient">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> to use for logging.
            </summary>
            <value>The <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> to use for logging.</value>
            <seealso cref="P:Microsoft.Bot.Builder.Dialogs.DialogSet.TelemetryClient"/>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Dialog.Source">
            <summary>
            Gets the information of the cref="SourceRange"/>.
            </summary>
            <value>The cref="SourceRange"/> information.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog is started and pushed onto the dialog stack.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="options">Optional, initial information to pass to the dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
             <summary>
             Called when the dialog is _continued_, where it is the active dialog and the
             user replies with a new activity.
             </summary>
             <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
             <remarks>If the task is successful, the result indicates whether the dialog is still
             active after the turn has been processed by the dialog. The result may also contain a
             return value.
            
             If this method is *not* overridden, the dialog automatically ends when the user replies.
             </remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ContinueDialogAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
             <summary>
             Called when a child dialog completed this turn, returning control to this dialog.
             </summary>
             <param name="dc">The dialog context for the current turn of the conversation.</param>
             <param name="reason">Reason why the dialog resumed.</param>
             <param name="result">Optional, value returned from the dialog that was called. The type
             of the value returned is dependent on the child dialog.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
             <remarks>If the task is successful, the result indicates whether this dialog is still
             active after this dialog turn has been processed.
            
             Generally, the child dialog was started with a call to
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/>. However, if the
             <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/> method
             is called, the logical child dialog may be different than the original.
            
             If this method is *not* overridden, the dialog automatically ends when the user replies.
             </remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog should re-prompt the user for input.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information for this dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.RepromptDialogAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog is ending.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information associated with the instance of this dialog on the dialog stack.</param>
            <param name="reason">Reason why the dialog ended.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.GetVersion">
            <summary>
            Gets a unique string which represents the version of this dialog.  If the version changes between turns the dialog system will emit a DialogChanged event.
            </summary>
            <returns>Unique string which should only change when dialog has changed in a way that should restart the dialog.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.OnDialogEventAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogEvent,System.Threading.CancellationToken)">
            <summary>
            Called when an event has been raised, using `DialogContext.emitEvent()`, by either the current dialog or a dialog that the current dialog started.
            </summary>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="e">The event being raised.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>True if the event is handled by the current dialog and bubbling should stop.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.OnPreBubbleEventAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogEvent,System.Threading.CancellationToken)">
            <summary>
            Called before an event is bubbled to its parent.
            </summary>
            <remarks>
            This is a good place to perform interception of an event as returning `true` will prevent
            any further bubbling of the event to the dialogs parents and will also prevent any child
            dialogs from performing their default processing.
            </remarks>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="e">The event being raised.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns> Whether the event is handled by the current dialog and further processing should stop.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.OnPostBubbleEventAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogEvent,System.Threading.CancellationToken)">
            <summary>
            Called after an event was bubbled to all parents and wasn't handled.
            </summary>
            <remarks>
            This is a good place to perform default processing logic for an event. Returning `true` will
            prevent any processing of the event by child dialogs.
            </remarks>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="e">The event being raised.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns> Whether the event is handled by the current dialog and further processing should stop.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.OnComputeId">
            <summary>
            Builds the compute Id for the dialog.
            </summary>
            <returns>A string representing the compute Id.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Dialog.RegisterSourceLocation(System.String,System.Int32)">
            <summary>
            Registers a cref="SourceRange"/> in the provided location.
            </summary>
            <param name="path">The path to the source file.</param>
            <param name="lineNumber">The line number where the source will be located on the file.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogContainer">
            <summary>
            A container for a set of Dialogs.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContainer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContainer"/> class.
            </summary>
            <param name="dialogId">The ID to assign to the dialog.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContainer.Dialogs">
            <summary>
            Gets or sets the containers <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/>.
            </summary>
            <value>The containers Dialog Set.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContainer.TelemetryClient">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> to use for logging.
            When setting this property, all of the contained dialogs' <see cref="P:Microsoft.Bot.Builder.Dialogs.Dialog.TelemetryClient"/>
            properties are also set.
            </summary>
            <value>The <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> to use when logging.</value>
            <seealso cref="P:Microsoft.Bot.Builder.Dialogs.DialogSet.TelemetryClient"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContainer.CreateChildContext(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Creates an inner dialog context for the containers active child.
            </summary>
            <param name="dc">Parents dialog context.</param>
            <returns>A new dialog context for the active child.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContainer.FindDialog(System.String)">
            <summary>
            Finds a child dialog that was previously added to the container.
            </summary>
            <param name="dialogId">The ID of the dialog to lookup.</param>
            <returns>The Dialog if found; otherwise null.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContainer.OnDialogEventAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogEvent,System.Threading.CancellationToken)">
            <summary>
            Called when an event has been raised, using `DialogContext.emitEvent()`, by either the current dialog or a dialog that the current dialog started.
            </summary>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="e">The event being raised.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>True if the event is handled by the current dialog and bubbling should stop.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContainer.GetInternalVersion">
            <summary>
            GetInternalVersion - Returns internal version identifier for this container.
            </summary>
            <remarks>
            DialogContainers detect changes of all sub-components in the container and map that to an DialogChanged event.
            Because they do this, DialogContainers "hide" the internal changes and just have the .id. This isolates changes
            to the container level unless a container doesn't handle it.  To support this DialogContainers define a
            protected virtual method GetInternalVersion() which computes if this dialog or child dialogs have changed
            which is then examined via calls to CheckForVersionChangeAsync().
            </remarks>
            <returns>version which represents the change of the internals of this container.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContainer.CheckForVersionChangeAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            CheckForVersionChangeAsync.
            </summary>
            <param name="dc">dialog context.</param>
            <param name="cancellationToken">cancellationToken.</param>
            <returns>task.</returns>
            <remarks>
            Checks to see if a containers child dialogs have changed since the current dialog instance
            was started.
            
            This should be called at the start of `beginDialog()`, `continueDialog()`, and `resumeDialog()`.
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogContext">
            <summary>
            Provides context for the current state of the dialog stack.
            </summary>
            <remarks>The <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/> property contains the <see cref="T:Microsoft.Bot.Builder.ITurnContext"/>
            for the current turn.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.#ctor(Microsoft.Bot.Builder.Dialogs.DialogSet,Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> class from the turn context.
            </summary>
            <param name="dialogs">The dialog set to create the dialog context for.</param>
            <param name="turnContext">The current turn context.</param>
            <param name="state">The state property from which to retrieve the dialog context.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.#ctor(Microsoft.Bot.Builder.Dialogs.DialogSet,Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogState)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> class.
            </summary>
            <param name="dialogs">Parent dialog set.</param>
            <param name="parentDialogContext">Parent dialog context.</param>
            <param name="state">Current dialog state.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Dialogs">
            <summary>
            Gets the set of dialogs which are active for the current dialog container.
            </summary>
            <value>
            The set of dialogs which are active for the current dialog container.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context">
            <summary>
            Gets the context for the current turn of conversation.
            </summary>
            <value>
            The context for the current turn of conversation.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Stack">
            <summary>
            Gets the current dialog stack.
            </summary>
            <value>
            The current dialog stack.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Parent">
            <summary>
            Gets or sets the parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>, if any. Used when searching for the ID of a dialog to start.
            </summary>
            <value>
            The parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>, if any. Used when searching for the ID of a dialog to start.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Child">
            <summary>
            Gets dialog context for child if there is an active child.
            </summary>
            <value>
            Dialog context for child if there is an active child.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.ActiveDialog">
            <summary>
            Gets the cached instance of the active dialog on the top of the stack or <c>null</c> if the stack is empty.
            </summary>
            <value>
            The cached instance of the active dialog on the top of the stack or <c>null</c> if the stack is empty.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.State">
            <summary>
            Gets or sets the DialogStateManager which manages view of all memory scopes.
            </summary>
            <value>
            DialogStateManager with unified memory view of all memory scopes.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Services">
            <summary>
            Gets the services collection which is contextual to this dialog context.
            </summary>
            <value>Services collection.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContext.DialogManager">
            <summary>
            Gets the current DialogManager for this dialogContext. This property is obsolete. 
            </summary>
            <value>
            The root dialogManager that was used to create this dialog context chain.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Starts a new dialog and pushes it onto the dialog stack.
            </summary>
            <param name="dialogId">ID of the dialog to start.</param>
            <param name="options">Optional, information to pass to the dialog being started.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Helper function to simplify formatting the options for calling a prompt dialog. This helper will
            take an <paramref name="options"/> argument and then call
            <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="dialogId">ID of the prompt dialog to start.</param>
            <param name="options">Information to pass to the prompt dialog being started.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ContinueDialogAsync(System.Threading.CancellationToken)">
             <summary>
             Continues execution of the active dialog, if there is one, by passing the current
             <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> to the active dialog's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/> method.
             </summary>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A task that represents the work queued to execute.</returns>
             <remarks>If the task is successful, the result indicates whether the dialog is still
             active after the turn has been processed by the dialog.
            
             Check the <see cref="P:Microsoft.Bot.Builder.TurnContext.Responded"/> property after the call completes
             to determine if the active dialog sent a reply message to the user.
             </remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)">
             <summary>
             Ends a dialog by popping it off the stack and returns an optional result to the dialog's
             parent. The parent dialog is the dialog the started the on being ended via a call to
             either <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/> or
             <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>. The parent dialog
             will have its <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)"/>
             method invoked with any returned result. If the parent dialog hasn't implemented a `ResumeDialogAsync`
             method, then it will be automatically ended as well and the result passed to its parent.
             If there are no more parent dialogs on the stack then processing of the turn will end.
             </summary>
             <param name="result">Optional, result to pass to the parent context.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A task that represents the work queued to execute.</returns>
             <remarks>If the task is successful, the result indicates that the dialog ended after the
             turn was processed by the dialog.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)"/> method to
             return a result to the parent dialog. If the parent dialog does not implement `ResumeDialogAsync`,
             then the parent will end, too, and the result passed to the next parent context.
            
             The returned <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult"/> contains the return value in its
             <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.Result"/> property.</remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.CancelAllDialogsAsync(System.Threading.CancellationToken)">
             <summary>
             Deletes any existing dialog stack thus canceling all dialogs on the stack.
             </summary>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A task that represents the work queued to execute.</returns>
             <remarks>If the task is successful, the result indicates that dialogs were canceled after the
             turn was processed by the dialog or that the stack was already empty.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)"/>
             method to return a result to the parent dialog. If the parent dialog does not implement
             `ResumeDialogAsync`, then the parent will end, too, and the result is passed to the next
             parent context.</remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.CancelAllDialogsAsync(System.Boolean,System.String,System.Object,System.Threading.CancellationToken)">
             <summary>
             Deletes any existing dialog stack thus canceling all dialogs on the stack.
             </summary>
             <param name="cancelParents">If true the cancellation will bubble up through any parent dialogs as well.</param>
             <param name="eventName">The event.</param>
             <param name="eventValue">The event value.</param>
             <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
             <returns>A task that represents the work queued to execute.</returns>
             <remarks>If the task is successful, the result indicates that dialogs were canceled after the
             turn was processed by the dialog or that the stack was already empty.
            
             In general, the parent context is the dialog or bot turn handler that started the dialog.
             If the parent is a dialog, the stack calls the parent's
             <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)"/>
             method to return a result to the parent dialog. If the parent dialog does not implement
             `ResumeDialogAsync`, then the parent will end, too, and the result is passed to the next
             parent context.</remarks>
             <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            Starts a new dialog and replaces on the stack the currently active dialog with the new one.
            This is particularly useful for creating loops or redirecting to another dialog.
            </summary>
            <param name="dialogId">ID of the new dialog to start.</param>
            <param name="options">Optional, information to pass to the dialog being started.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.RepromptDialogAsync(System.Threading.CancellationToken)">
            <summary>
            Calls the currently active dialog's
            <see cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)"/>
            method. Used with dialogs that implement a re-prompt behavior.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Dialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.FindDialog(System.String)">
            <summary>
            Find the dialog id for the given context.
            </summary>
            <param name="dialogId">dialog id to find.</param>
            <returns>dialog with that id.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EmitEventAsync(System.String,System.Object,System.Boolean,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Searches for a dialog with a given ID.
            Emits a named event for the current dialog, or someone who started it, to handle.
            </summary>
            <param name="name">Name of the event to raise.</param>
            <param name="value">Value to send along with the event.</param>
            <param name="bubble">Flag to control whether the event should be bubbled to its parent if not handled locally. Defaults to a value of `true`.</param>
            <param name="fromLeaf">Whether the event is emitted from a leaf node.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>True if the event was handled.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogContext.GetLocale">
            <summary>
            Obtain the CultureInfo in DialogContext.
            </summary>
            <returns>A string representing the current locale.</returns>
            <exception cref="T:System.Globalization.CultureNotFoundException">Thrown when no locale is resolved and no default value factory is provided.</exception>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogContextVisibleState">
            <summary>
            Defines the shape of the state object returned by calling DialogContext.State.ToJson().
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContextVisibleState.User">
            <summary>
            Gets or sets the User related to the State.
            </summary>
            <value>The user related to the State.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContextVisibleState.Conversation">
            <summary>
            Gets or sets the Conversation related to the State.
            </summary>
            <value>The conversation related to the State.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogContextVisibleState.Dialog">
            <summary>
            Gets or sets the Dialog related to the State.
            </summary>
            <value>The dialog related to the State.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogEvent">
            <summary>
            Represents an event related to the "lifecycle" of the dialog.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogEvent.Bubble">
            <summary>
            Gets or sets a value indicating whether the event will be bubbled to the parent `DialogContext` 
            if not handled by the current dialog.
            </summary>
            <value>
            Whether the event can be bubbled to the parent `DialogContext`.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogEvent.Name">
            <summary>
            Gets or sets name of the event being raised.
            </summary>
            <value>
            Name of the event being raised.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogEvent.Value">
            <summary>
            Gets or sets optional value associated with the event.
            </summary>
            <value>
            Optional value associated with the event.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogEvents">
            <summary>
            Represents the events related to the "lifecycle" of the dialog.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.BeginDialog">
            <summary>
            Event fired when a dialog beginDialog() is called.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.RepromptDialog">
            <summary>
            Event fired when a dialog RepromptDialog is Called.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.CancelDialog">
            <summary>
            Event fired when a dialog is canceled.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.ActivityReceived">
            <summary>
            Event fired when an activity is received from the adapter (or a request to reprocess an activity).
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.VersionChanged">
            <summary>
            Event which is fired when the system has detected that deployed code has changed the execution of dialogs between turns.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.Error">
            <summary>
            Event fired when there was an exception thrown in the system.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogEvents.Custom">
            <summary>
            Custom event.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogExtensions">
            <summary>
            Provides extension methods for <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> and derived classes.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogExtensions.RunAsync(Microsoft.Bot.Builder.Dialogs.Dialog,Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.IStatePropertyAccessor{Microsoft.Bot.Builder.Dialogs.DialogState},System.Threading.CancellationToken)">
            <summary>
            Creates a dialog stack and starts a dialog, pushing it onto the stack.
            </summary>
            <param name="dialog">The dialog to start.</param>
            <param name="turnContext">The context for the current turn of the conversation.</param>
            <param name="accessor">The <see cref="T:Microsoft.Bot.Builder.IStatePropertyAccessor`1"/> accessor
            with which to manage the state of the dialog stack.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogExtensions.SendStateSnapshotTraceAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Helper to send a trace activity with a memory snapshot of the active dialog DC. 
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogExtensions.SendEoCToParent(Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Helper to determine if we should send an EoC to the parent or not.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogInstance">
            <summary>
            Contains state information associated with a <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> on a dialog stack.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogInstance.Id">
            <summary>
            Gets or sets the ID of the dialog.
            </summary>
            <value>
            The ID of the dialog.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogInstance.State">
            <summary>
            Gets or sets the instance's persisted state.
            </summary>
            <value>
            The instance's persisted state.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogInstance.StackIndex">
            <summary>
            Gets or sets a stack index. Positive values are indexes within the current DC and negative values are 
            indexes in the parent DC.
            </summary>
            <value>
            Positive values are indexes within the current DC and negative values are indexes in
            the parent DC.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogInstance.Version">
            <summary>
            Gets or sets version string.
            </summary>
            <value>Unique string from the dialog this dialoginstance is tracking which is used to identify when a dialog has changed in way that should emit an event for changed content.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogManager">
            <summary>
            Class which runs the dialog system.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManager.#ctor(Microsoft.Bot.Builder.Dialogs.Dialog,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogManager"/> class.
            </summary>
            <param name="rootDialog">Root dialog to use.</param>
            <param name="dialogStateProperty">alternate name for the dialogState property. (Default is "DialogState").</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.ConversationState">
            <summary>
            Gets or sets the ConversationState.
            </summary>
            <value>
            The ConversationState.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.UserState">
            <summary>
            Gets or sets the UserState.
            </summary>
            <value>
            The UserState.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.InitialTurnState">
            <summary>
            Gets InitialTurnState collection to copy into the TurnState on every turn.
            </summary>
            <value>
            TurnState.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.RootDialog">
            <summary>
            Gets or sets root dialog to use to start conversation.
            </summary>
            <value>
            Root dialog to use to start conversation.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.Dialogs">
            <summary>
            Gets or sets global dialogs that you want to have be callable.
            </summary>
            <value>Dialogs set.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.StateConfiguration">
            <summary>
            Gets or sets the DialogStateManagerConfiguration.
            </summary>
            <value>
            The DialogStateManagerConfiguration.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManager.ExpireAfter">
            <summary>
            Gets or sets (optional) number of milliseconds to expire the bot's state after.
            </summary>
            <value>
            Number of milliseconds.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManager.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)">
            <summary>
            Runs dialog system in the context of an ITurnContext.
            </summary>
            <param name="context">turn context.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns>result of the running the logic against the activity.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManager.RegisterContainerDialogs(Microsoft.Bot.Builder.Dialogs.Dialog,System.Boolean)">
            <summary>
            Recursively traverses the <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> tree and registers instances of <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContainer"/>
            in the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> for this <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogManager"/> instance.
            </summary>
            <param name="dialog">Root of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> subtree to iterate and register containers from.</param>
            <param name="registerRoot">Whether to register the root of the subtree. </param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogManagerResult">
            <summary>
            Represents the result of the Dialog Manager turn.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManagerResult.TurnResult">
            <summary>
            Gets or sets the result returned to the caller.
            </summary>
            <value>The result returned to the caller.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManagerResult.Activities">
            <summary>
            Gets or sets the array of resulting activities.
            </summary>
            <value>The array of resulting activities.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManagerResult.NewState">
            <summary>
            Gets or sets the resulting new state.
            </summary>
            <value>The resulting new state.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogReason">
            <summary>
            Indicates in which a dialog-related method is being called.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogReason.BeginCalled">
            <summary>
            A dialog was started.
            </summary>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogReason.ContinueCalled">
            <summary>
            A dialog was continued.
            </summary>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ContinueDialogAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogReason.EndCalled">
            <summary>
            A dialog was ended normally.
            </summary>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogReason.ReplaceCalled">
            <summary>
            A dialog was ending because it was replaced.
            </summary>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.ReplaceDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogReason.CancelCalled">
            <summary>
            A dialog was canceled.
            </summary>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.CancelAllDialogsAsync(System.Threading.CancellationToken)"/>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogReason.NextCalled">
            <summary>
            A preceding step of the dialog was skipped.
            </summary>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.NextAsync(System.Object,System.Threading.CancellationToken)"/>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogsBotComponent">
            <summary>
            Bot component for bot Dialogs.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogsBotComponent.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <inheritdoc/>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogsComponentRegistration">
            <summary>
            Makes Dialogs components available to the system registering functionality.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogSet">
            <summary>
            A collection of <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> objects that can all call each other.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.#ctor(Microsoft.Bot.Builder.IStatePropertyAccessor{Microsoft.Bot.Builder.Dialogs.DialogState})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> class.
            </summary>
            <param name="dialogState">The state property accessor with which to manage the stack for
            this dialog set.</param>
            <remarks>To start and control the dialogs in this dialog set, create a <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>
            and use its methods to start, continue, or end dialogs. To create a dialog context,
            call <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogSet.CreateContextAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> class with null <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogState"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogSet.TelemetryClient">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> to use for logging.
            </summary>
            <value>The <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> to use for logging.</value>
            <remarks>When this property is set, it sets the <see cref="P:Microsoft.Bot.Builder.Dialogs.Dialog.TelemetryClient"/> of each
            dialog in the set to the new value.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.GetVersion">
            <summary>
            Gets a unique string which represents the combined versions of all dialogs in this this dialogset.  
            </summary>
            <returns>Version will change when any of the child dialogs version changes.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.Add(Microsoft.Bot.Builder.Dialogs.Dialog)">
            <summary>
            Adds a new dialog to the set and returns the set to allow fluent chaining.
            If the Dialog.Id being added already exists in the set, the dialogs id will be updated to 
            include a suffix which makes it unique. So adding 2 dialogs named "duplicate" to the set
            would result in the first one having an id of "duplicate" and the second one having an id
            of "duplicate2".
            </summary>
            <param name="dialog">The dialog to add.</param>
            <returns>The dialog set after the operation is complete.</returns>
            <remarks>The added dialog's <see cref="P:Microsoft.Bot.Builder.Dialogs.Dialog.TelemetryClient"/> is set to the
            <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogSet.TelemetryClient"/> of the dialog set.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.CreateContextAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)">
            <summary>
            Creates a <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> which can be used to work with the dialogs in the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/>.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result contains the created <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.Find(System.String)">
            <summary>
            Searches the current <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> for a <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> by its ID.
            </summary>
            <param name="dialogId">ID of the dialog to search for.</param>
            <returns>The dialog if found; otherwise <c>null</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogSet.GetDialogs">
            <summary>
            Gets the Dialogs of the set.
            </summary>
            <returns>A collection of <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogState">
            <summary>
            Contains state information for the dialog stack.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogState"/> class.
            </summary>
            <remarks>The new instance is created with an empty dialog stack.</remarks>
            <seealso cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Stack"/>
            <seealso cref="M:Microsoft.Bot.Builder.Dialogs.DialogSet.#ctor(Microsoft.Bot.Builder.IStatePropertyAccessor{Microsoft.Bot.Builder.Dialogs.DialogState})"/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogState.#ctor(System.Collections.Generic.List{Microsoft.Bot.Builder.Dialogs.DialogInstance})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogState"/> class.
            </summary>
            <param name="stack">The state information to initialize the stack with.</param>
            <remarks>The new instance has a dialog stack that is populated using the information
            in <paramref name="stack"/>.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogState.DialogStack">
            <summary>
            Gets or sets the state information for a dialog stack.
            </summary>
            <value>State information for a dialog stack.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult">
            <summary>
            Result returned to the caller of one of the various stack manipulation methods.
            </summary>
            <remarks>
            Use <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.EndDialogAsync(System.Object,System.Threading.CancellationToken)"/>
            to end a <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> and return a result to the calling context.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.#ctor(Microsoft.Bot.Builder.Dialogs.DialogTurnStatus,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult"/> class.
            </summary>
            <param name="status">The status of the stack.</param>
            <param name="result">The result return by the dialog.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.Status">
            <summary>
            Gets or sets the current status of the stack.
            </summary>
            <value>
            The current status of the stack.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.Result">
             <summary>
             Gets or sets the result returned by a dialog that was just ended.
             This will only be populated in certain cases:
            
             - The bot calls `DialogContext.BeginDialogAsync()` to start a new dialog and the dialog ends immediately.
             - The bot calls `DialogContext.ContinueDialogAsync()` and a dialog that was active ends.
            
             In all cases where it's populated, <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.ActiveDialog"/> will be `null`.
             </summary>
             <value>
             The result returned by a dialog that was just ended.
             </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogTurnResult.ParentEnded">
            <summary>
            Gets or sets a value indicating whether a DialogCommand has ended its parent container and the parent should not perform any further processing.
            </summary>
            <value>
            Whether a DialogCommand has ended its parent container and the parent should not perform any further processing.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogTurnStatus">
            <summary>
            Enums the possible states of the dialogs on the stack.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogTurnStatus.Empty">
            <summary>
            Indicates that there is currently nothing on the dialog stack.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogTurnStatus.Waiting">
            <summary>
            Indicates that the dialog on top is waiting for a response from the user.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogTurnStatus.Complete">
            <summary>
            Indicates that a dialog completed successfully, the result is available, and no child
            dialogs to the current context are on the dialog stack.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogTurnStatus.Cancelled">
            <summary>
            Indicates that the dialog was canceled, and no child
            dialogs to the current context are on the dialog stack.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogTurnStatus.CompleteAndWait">
            <summary>
            Current dialog completed successfully, but turn should end.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Extensions">
            <summary>
            Extension method on object <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Extensions.CastTo``1(System.Object)">
            <summary>
            Extension Method on object to cast to type T to support TypeNameHandling.None during storage serialization.
            </summary>
            <param name="obj">object to cast.</param>
            <typeparam name="T">type to which object should be casted.</typeparam>
            <returns>T.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.IDialogDependencies">
            <summary>
            Defines Dialog Dependencies interface for enumerating child dialogs.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.IDialogDependencies.GetDependencies">
            <summary>
            Enumerate child dialog dependencies so they can be added to the containers dialogset.
            </summary>
            <returns>dialog enumeration.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.IItemIdentity">
            <summary>
            Defines the interface for getting an items identity.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.IItemIdentity.GetIdentity">
            <summary>
            Gets the identity of the item.
            </summary>
            <returns>A string representing the identity of the item.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ITemplate`1">
            <summary>
            Defines Template interface for binding data to T.
            </summary>
            <typeparam name="T">Type to bind data to.</typeparam>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ITemplate`1.BindAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Given the turn context bind to the data to create the object of type T.
            </summary>
            <param name="dialogContext">dialogContext.</param>
            <param name="data">data to bind to. If Null, then dc.State will be used.</param>
            <param name="cancellationToken">the <see cref="T:System.Threading.CancellationToken"/> for this task.</param>
            <returns>instance of T.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogContextPath">
            <summary>
            Defines path for available dialog contexts.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogContextPath.ActiveDialog">
            <summary>
            Memory Path to dialogContext's active dialog.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogContextPath.Parent">
            <summary>
            Memory Path to dialogContext's parent dialog.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogContextPath.Stack">
            <summary>
            Memory Path to dialogContext's stack.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogPath">
            <summary>
            Defines path for available dialogs.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.EventCounter">
            <summary>
            Counter of emitted events.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.ExpectedProperties">
            <summary>
            Currently expected properties.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.DefaultOperation">
            <summary>
            Default operation to use for entities where there is no identified operation entity.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.LastEvent">
            <summary>
            Last surfaced entity ambiguity event.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.RequiredProperties">
            <summary>
            Currently required properties.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.Retries">
            <summary>
            Number of retries for the current Ask.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.LastIntent">
            <summary>
            Last intent.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.DialogPath.LastTriggerEvent">
            <summary>
            Last trigger event: defined in FormEvent, ask, clarifyEntity etc..
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogPath.GetPropertyName(System.String)">
            <summary>
            Utility function to get just the property name without the memory scope prefix.
            </summary>
            <param name="property">memory scope property path.</param>
            <returns>name of the property without the prefix.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager">
            <summary>
            The DialogStateManager manages memory scopes and pathresolvers
            MemoryScopes are named root level objects, which can exist either in the dialogcontext or off of turn state
            PathResolvers allow for shortcut behavior for mapping things like $foo -> dialog.foo.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.PathTracker">
            <summary>
            Information for tracking when path was last modified.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.#ctor(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManagerConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager"/> class.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="configuration">Configuration for the dialog state manager. Default is <c>null</c>.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Configuration">
            <summary>
            Gets or sets the configured path resolvers and memory scopes for the dialog state manager.
            </summary>
            <value>A <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManagerConfiguration"/> with the configuration.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the memory scopes.
            </summary>
            <value>Keys of the memory scopes.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values of the memory scopes.
            </summary>
            <value>Values of the memory scopes.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Count">
            <summary>
            Gets the number of memory scopes in the dialog state manager.
            </summary>
            <value>Number of memory scopes in the configuration.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.IsReadOnly">
            <summary>
            Gets a value indicating whether the dialog state manager is read-only.
            </summary>
            <value><c>true</c>.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Item(System.String)">
            <summary>
            Gets or sets the elements with the specified key.
            </summary>
            <param name="key">Key to get or set the element.</param>
            <returns>The element with the specified key.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetMemoryScope(System.String)">
            <summary>
            Get MemoryScope by name.
            </summary>
            <param name="name">Name of scope.</param>
            <returns>A memory scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Version">
            <summary>
            Version help caller to identify the updates and decide cache or not.
            </summary>
            <returns>Current version.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.ResolveMemoryScope(System.String,System.String@)">
            <summary>
            ResolveMemoryScope will find the MemoryScope for and return the remaining path.
            </summary>
            <param name="path">Incoming path to resolve to scope and remaining path.</param>
            <param name="remainingPath">Remaining subpath in scope.</param>
            <returns>The memory scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.TransformPath(System.String)">
            <summary>
            Transform the path using the registered PathTransformers.
            </summary>
            <param name="path">Path to transform.</param>
            <returns>The transformed path.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.TryGetValue``1(System.String,``0@)">
            <summary>
            Get the value from memory using path expression (NOTE: This always returns clone of value).
            </summary>
            <remarks>This always returns a CLONE of the memory, any modifications to the result of this will not be affect memory.</remarks>
            <typeparam name="T">the value type to return.</typeparam>
            <param name="path">path expression to use.</param>
            <param name="value">Value out parameter.</param>
            <returns>True if found, false if not.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetValue``1(System.String,System.Func{``0})">
            <summary>
            Get the value from memory using path expression (NOTE: This always returns clone of value).
            </summary>
            <remarks>This always returns a CLONE of the memory, any modifications to the result of this will not be affect memory.</remarks>
            <typeparam name="T">The value type to return.</typeparam>
            <param name="pathExpression">Path expression to use.</param>
            <param name="defaultValue">Function to give default value if there is none (OPTIONAL).</param>
            <returns>Result or null if the path is not valid.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetIntValue(System.String,System.Int32)">
            <summary>
            Get a int value from memory using a path expression.
            </summary>
            <param name="pathExpression">Path expression.</param>
            <param name="defaultValue">Default value if the value doesn't exist.</param>
            <returns>Value or null if path is not valid.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetBoolValue(System.String,System.Boolean)">
            <summary>
            Get a bool value from memory using a path expression.
            </summary>
            <param name="pathExpression">The path expression.</param>
            <param name="defaultValue">Default value if the value doesn't exist.</param>
            <returns>Bool or null if path is not valid.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetStringValue(System.String,System.String)">
            <summary>
            Get a string value from memory using a path expression.
            </summary>
            <param name="pathExpression">The path expression.</param>
            <param name="defaultValue">Default value if the value doesn't exist.</param>
            <returns>string or null if path is not valid.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.SetValue(System.String,System.Object)">
            <summary>
            Set memory to value.
            </summary>
            <param name="path">Path to memory.</param>
            <param name="value">Object to set.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.RemoveValue(System.String)">
            <summary>
            Remove property from memory.
            </summary>
            <param name="path">Path to remove the leaf property.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetMemorySnapshot">
            <summary>
            Gets all memoryscopes suitable for logging.
            </summary>
            <returns>object which represents all memory scopes.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.LoadAllScopesAsync(System.Threading.CancellationToken)">
            <summary>
            Load all of the scopes.
            </summary>
            <param name="cancellationToken">cancellationToken.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.SaveAllChangesAsync(System.Threading.CancellationToken)">
            <summary>
            Save all changes for all scopes.
            </summary>
            <param name="cancellationToken">cancellationToken.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.DeleteScopesMemoryAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Delete the memory for a scope.
            </summary>
            <param name="name">name of the scope.</param>
            <param name="cancellationToken">cancellationToken.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Add(System.String,System.Object)">
            <summary>
            Adds an element to the dialog state manager.
            </summary>
            <param name="key">Key of the element to add.</param>
            <param name="value">Value of the element to add.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.ContainsKey(System.String)">
            <summary>
            Determines whether the dialog state manager contains an element with the specified key.
            </summary>
            <param name="key">The key to locate in the dialog state manager.</param>
            <returns><c>true</c> if the dialog state manager contains an element with 
            the key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the dialog state manager.
            </summary>
            <param name="key">The key of the element to remove.</param>
            <returns><c>true</c> if the element is succesfully removed; otherwise, false.</returns>
            <remarks>This method is not supported.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the
            key is found; otherwise, the default value for the type of the value parameter.
            This parameter is passed uninitialized.</param>
            <returns><c>true</c> if the dialog state manager contains an element with the specified key; 
            otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the dialog state manager.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> with the key and object of 
            the item to add.</param>
            <remarks>This method is not supported.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Clear">
            <summary>
            Removes all items from the dialog state manager.
            </summary>
            <remarks>This method is not supported.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the dialog state manager contains a specific value.
            </summary>
            <param name="item">The <see cref="T:System.Collections.Generic.KeyValuePair`2"/> of the item to locate.</param>
            <returns><c>true</c> if item is found in the dialog state manager; otherwise,
            <c>false</c>.</returns>
            <remarks>This method is not supported.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the dialog state manager to an array starting at a particular index.
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied
            from the dialog state manager. The array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the dialog state manager.
            </summary>
            <param name="item">The object to remove from the dialog state manager.</param>
            <returns><c>true</c> if the item was successfully removed from the dialog state manager;
            otherwise, <c>false</c>.</returns>
            <remarks>This method is not supported.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.TrackPaths(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Track when specific paths are changed.
            </summary>
            <param name="paths">Paths to track.</param>
            <returns>Normalized paths to pass to <see cref="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.AnyPathChanged(System.UInt32,System.Collections.Generic.IEnumerable{System.String})"/>.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.AnyPathChanged(System.UInt32,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Check to see if any path has changed since watermark.
            </summary>
            <param name="counter">Time counter to compare to.</param>
            <param name="paths">Paths from <see cref="M:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManager.TrackPaths(System.Collections.Generic.IEnumerable{System.String})"/> to check.</param>
            <returns>True if any path has changed since counter.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManagerConfiguration">
            <summary>
            Configures the path resolvers and memory scopes for the dialog state manager.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManagerConfiguration.PathResolvers">
            <summary>
            Gets or sets PathResolvers.
            </summary>
            <value>
            PathResolvers (aka shortcuts) to load into the dialog state manager context.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.DialogStateManagerConfiguration.MemoryScopes">
            <summary>
            Gets or sets MemoryScopes.
            </summary>
            <value>
            MemoryScopes to load into the dialog state manager context.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.IPathResolver">
            <summary>
            Defines Path Resolver interface for transforming paths.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.IPathResolver.TransformPath(System.String)">
            <summary>
            Transform the path.
            </summary>
            <param name="path">path to inspect.</param>
            <returns>transformed path.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver">
            <summary>
            Maps aliasXXX -> path.xxx ($foo => dialog.foo).
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver"/> class.
            </summary>
            <param name="alias">Alias name.</param>
            <param name="prefix">Prefix name.</param>
            <param name="postfix">Postfix name.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver.Alias">
            <summary>
            Gets the alias name.
            </summary>
            <value>
            The alias name.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver.TransformPath(System.String)">
            <summary>
            Transforms the path.
            </summary>
            <param name="path">Path to inspect.</param>
            <returns>Transformed path.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AliasPathResolver.IsPathChar(System.Char)">
            <summary>
            Verifies if a character is valid for a path.
            </summary>
            <param name="ch">Character to verify.</param>
            <returns><c>true</c> if the character is valid for a path; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtAtPathResolver">
            <summary>
            Maps @@ => turn.recognized.entitites.xxx array.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtAtPathResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtAtPathResolver"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtPathResolver">
            <summary>
            Maps @ => turn.recognized.entitites.xxx[0].
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtPathResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtPathResolver"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.AtPathResolver.TransformPath(System.String)">
            <summary>
            Transforms the path.
            </summary>
            <param name="path">Path to inspect.</param>
            <returns>Transformed path.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.DollarPathResolver">
            <summary>
            Resolve $xxx.
            </summary>
            <remarks>
            $xxx -> dialog.x.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.DollarPathResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.DollarPathResolver"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.HashPathResolver">
            <summary>
            Maps #xxx => turn.recognized.intents.xxx.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.HashPathResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.HashPathResolver"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.PercentPathResolver">
            <summary>
            Maps %xxx => settings.xxx (aka activeDialog.Instance.xxx).
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.PercentPathResolver.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.PathResolvers.PercentPathResolver"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1">
            <summary>
            BotStateMemoryScope represents a BotState scoped memory.
            </summary>
            <remarks>This relies on the BotState object being accessible from turnContext.TurnState.Get&lt;T&gt;().</remarks>
            <typeparam name="T">BotState type.</typeparam>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1"/> class.
            </summary>
            <param name="name">name of the property.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Get the backing memory for this scope.
            </summary>
            <param name="dialogContext">dc.</param>
            <returns>memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dialogContext">dc.</param>
            <param name="memory">memory.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1.LoadAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Populates the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState"/> from the storage layer.
            </summary>
            <param name="dialogContext">The dialog context object for this turn.</param>
            <param name="force">Optional, <c>true</c> to overwrite any existing state cache;
            or <c>false</c> to load state from storage only if the cache doesn't already exist.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1.SaveChangesAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Writes the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState"/> to the storage layer.
            </summary>
            <param name="dialogContext">The dialog context object for this turn.</param>
            <param name="force">Optional, <c>true</c> to save the state cache to storage;
            or <c>false</c> to save state to storage only if a property in the cache has changed.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.BotStateMemoryScope`1.DeleteAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Deletes any state in storage and the cache for this <see cref="T:Microsoft.Bot.Builder.BotState"/>.
            </summary>
            <param name="dialogContext">The dialog context object for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ClassMemoryScope">
            <summary>
            DialogMemoryScope maps "class" -> dc.ActiveDialog Properties.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ClassMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ClassMemoryScope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ClassMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Gets the backing memory for this scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <returns>Memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ClassMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="memory">Memory object to set for the scope.</param>
            <remarks>Method not supported. You can't modify the class scope.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ConversationMemoryScope">
            <summary>
            ConversationMemoryScope represents Conversation scoped memory. 
            </summary>
            <remarks>This relies on the ConversationState object being accessible from turnContext.TurnState.Get&lt;ConversationState&gt;().</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ConversationMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ConversationMemoryScope"/> class.
            Create new ConversationMemoryScope bound to ConversationState.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogClassMemoryScope">
            <summary>
            DialogMemoryScope maps "dialogclass" -> dc.Parent.ActiveDialog Properties.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogClassMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogClassMemoryScope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogClassMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Gets the backing memory for this scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <returns>Memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogClassMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="memory">Memory object to set for the scope.</param>
            <remarks>Method not supported. You can't modify the dialogclass scope.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope">
            <summary>
            DialogContextMemoryScope maps "dialogcontext" -> properties.
            </summary>
            <remarks>
             dc.stack => stack of all dialog ids up to the root dialog.
             dc.activeDialog => id of active dialog.
             dc.parent => id of parent dialog.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope.Stack">
            <summary>
            Stack name.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope.ActiveDialog">
            <summary>
            Active dialog name.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope.Parent">
            <summary>
            Parent name.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Gets the backing memory for this scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <returns>Memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogContextMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="memory">Memory object to set for the scope.</param>
            <remarks>Method not supported. You can't modify the dialogcontext scope.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogMemoryScope">
            <summary>
            DialogMemoryScope maps "dialog" -> dc.Parent?.ActiveDialog.State ?? ActiveDialog.State.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogMemoryScope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Gets the backing memory for this scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <returns>Memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.DialogMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="memory">Memory object to set for the scope.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope">
            <summary>
            MemoryScope represents a named memory scope abstract class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope"/> class.
            </summary>
            <param name="name">Name of the scope.</param>
            <param name="includeInSnapshot"><see cref="T:System.Boolean"/> value indicating whether this memory 
            should be included in snapshot. Default value is true.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.Name">
            <summary>
            Gets or sets name of the scope.
            </summary>
            <value>
            Name of the scope.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.IncludeInSnapshot">
            <summary>
            Gets or sets a value indicating whether this memory should be included in snapshot.
            </summary>
            <value>
            True or false.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Get the backing memory for this scope.
            </summary>
            <param name="dc">dc.</param>
            <returns>memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">dc.</param>
            <param name="memory">memory.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.LoadAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Populates the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState"/> from the storage layer.
            </summary>
            <param name="dialogContext">The dialog context object for this turn.</param>
            <param name="force">Optional, <c>true</c> to overwrite any existing state cache;
            or <c>false</c> to load state from storage only if the cache doesn't already exist.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.SaveChangesAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Writes the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState"/> to the storage layer.
            </summary>
            <param name="dialogContext">The dialog context object for this turn.</param>
            <param name="force">Optional, <c>true</c> to save the state cache to storage;
            or <c>false</c> to save state to storage only if a property in the cache has changed.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.MemoryScope.DeleteAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Deletes any state in storage and the cache for this <see cref="T:Microsoft.Bot.Builder.BotState"/>.
            </summary>
            <param name="dialogContext">The dialog context object for this turn.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ReadOnlyObject">
            <summary>
            ReadOnlyObject is a wrapper around any object to prevent setting of properties on the object.
            </summary>
            <remarks>
            Any complex objects that are returned from this are further wrapped in an ReadOnlyObject, so that you can
            get ExpressionProperty binding for properties in a complex hierarchy of objects.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ReadOnlyObject.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ReadOnlyObject"/> class.
            </summary>
            <param name="obj">object to wrap.  Any expression properties on it will be evaluated using the dc.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope">
            <summary>
            SettingsMemoryscope maps "settings" -> IConfiguration.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope"/> class.
            </summary>
            <param name="configuration">The <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> from which to create these settings.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Gets the backing memory for this scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <returns>Memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.LoadAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="memory">Memory object to set for the scope.</param>
            <remarks>Method not supported. You cannot set the memory for a readonly memory scope.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.LoadSettings(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Build a dictionary view of configuration providers.
            </summary>
            <param name="configuration">IConfiguration that we are running with.</param>
            <returns>projected dictionary for settings.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.ConvertFlattenSettingToNode(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
            <summary>
            Generate a node tree with the flatten settings.
            For example:
            {
              "array":["item1", "item2"],
              "object":{"array":["item1"], "2":"numberkey"}
            }
            
            Would generate a flatten settings like:
            array:0 item1
            array:1 item2
            object:array:0 item1
            object:2 numberkey
            
            After Converting it from flatten settings into node tree, would get:
            
                                    null
                           |                     |
                         array                object
                       |        |            |        |
                      0          1        array        2
                      |          |         |           |
                    item1       item2      0        numberkey
                                           |
                                         item1
            The result is a Tree.
            </summary>
            <param name="kvs">Configurations with key value pairs.</param>
            <returns>The root node of the tree.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.Node">
            <summary>
            The setting node.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.Node.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.Node"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.Node.Value">
            <summary>
            Gets or sets value of the node. If the node is not leaf, value presents the current path.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.SettingsMemoryScope.Node.Children">
            <summary>
            Gets or sets children of the node.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ThisMemoryScope">
            <summary>
            DialogMemoryScope maps "this" -> dc.ActiveDialog.State.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ThisMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ThisMemoryScope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ThisMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Gets the backing memory for this scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <returns>Memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.ThisMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> object for this turn.</param>
            <param name="memory">Memory object to set for the scope.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.TurnMemoryScope">
            <summary>
            TurnMemoryScope represents memory scoped to the current turn.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.TurnMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.TurnMemoryScope"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.TurnMemoryScope.GetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Get the backing memory for this scope.
            </summary>
            <param name="dc">dc.</param>
            <returns>memory for the scope.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.TurnMemoryScope.SetMemory(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object)">
            <summary>
            Changes the backing object for the memory scope.
            </summary>
            <param name="dc">dc.</param>
            <param name="memory">memory.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.UserMemoryScope">
            <summary>
            UserMemoryScope represents User scoped memory.
            </summary>
            <remarks>This relies on the UserState object being accessible from turnContext.TurnState.Get&lt;UserState&gt;().</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.UserMemoryScope.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Memory.Scopes.UserMemoryScope"/> class.
            </summary>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.IComponentMemoryScopes">
            <summary>
            Defines Component Memory Scopes interface for enumerating memory scopes.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.IComponentMemoryScopes.GetMemoryScopes">
            <summary>
            Gets the memory scopes.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> with the memory scopes.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Memory.IComponentPathResolvers">
            <summary>
            Interface for declaring path resolvers in the memory system.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Memory.IComponentPathResolvers.GetPathResolvers">
            <summary>
            Return enumeration of pathresolvers.
            </summary>
            <returns>collection of IPathResolvers.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ScopePath">
            <summary>
            Defines paths for the available scopes.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.User">
            <summary>
            User memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.Conversation">
            <summary>
            Conversation memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.Dialog">
            <summary>
            Dialog memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.DialogClass">
            <summary>
            DialogClass memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.DialogContext">
            <summary>
            DialogContext memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.This">
            <summary>
            This memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.Class">
            <summary>
            Class memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.Settings">
            <summary>
            Settings memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.Turn">
            <summary>
            Turn memory scope root path.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.USER">
            <summary>
            User memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.User instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.CONVERSATION">
            <summary>
            Conversation memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.Conversation instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.DIALOG">
            <summary>
            Dialog memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.Dialog instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.DIALOGCLASS">
            <summary>
            DialogClass memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.DialogClass instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.THIS">
            <summary>
            This memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.This instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.CLASS">
            <summary>
            Class memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.Class instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.SETTINGS">
            <summary>
            Settings memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.Settings instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ScopePath.TURN">
            <summary>
            Turn memory scope root path.
            </summary>
            <remarks>This property is deprecated, use ScopePath.Turn instead.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ThisPath">
            <summary>
            Defines path passed to the active dialog.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ThisPath.Options">
            <summary>
            The options that were passed to the active dialog via options argument of BeginDialog.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ThisPath.OPTIONS">
            <summary>
            The options that were passed to the active dialog via options argument of BeginDialog.
            </summary>
            <remarks>This property is deprecated, use ThisPath.Options instead.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.TurnPath">
            <summary>
            Defines path for avaiable turns.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.LastResult">
            <summary>
            The result from the last dialog that was called.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.Activity">
            <summary>
            The current activity for the turn.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.Recognized">
            <summary>
            The recognized result for the current turn.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.TopIntent">
            <summary>
            Path to the top intent.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.TopScore">
            <summary>
            Path to the top score.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.Text">
            <summary>
            Original text.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.UnrecognizedText">
            <summary>
            Original utterance split into unrecognized strings.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.RecognizedEntities">
            <summary>
            Entities that were recognized from text.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.Interrupted">
            <summary>
            If true an interruption has occured.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.DialogEvent">
            <summary>
            The current dialog event (set during event processing).
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.RepeatedIds">
            <summary>
            Used to track that we don't end up in infinite loop of RepeatDialogs().
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.ActivityProcessed">
            <summary>
            This is a bool which if set means that the turncontext.activity has been consumed by some component in the system.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.LASTRESULT">
            <summary>
            The result from the last dialog that was called.
            </summary>
            <remarks>This property is deprecated, use TurnPath.LastResult instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.ACTIVITY">
            <summary>
            The current activity for the turn.
            </summary>
            <remarks>This property is deprecated, use TurnPath.Activity instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.RECOGNIZED">
            <summary>
            The recognized result for the current turn.
            </summary>
            <remarks>This property is deprecated, use TurnPath.Recognized instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.TOPINTENT">
            <summary>
            Path to the top intent.
            </summary>
            <remarks>This property is deprecated, use TurnPath.TopIntent instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.TOPSCORE">
            <summary>
            Path to the top score.
            </summary>
            <remarks>This property is deprecated, use TurnPath.TopScore instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.TEXT">
            <summary>
            Original text.
            </summary>
            <remarks>This property is deprecated, use TurnPath.Text instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.UNRECOGNIZEDTEXT">
            <summary>
            Original utterance split into unrecognized strings.
            </summary>
            <remarks>This property is deprecated, use TurnPath.UnrecognizedText instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.RECOGNIZEDENTITIES">
            <summary>
            Entities that were recognized from text.
            </summary>
            <remarks>This property is deprecated, use TurnPath.RecognizedEntities instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.INTERRUPTED">
            <summary>
            If true an interruption has occured.
            </summary>
            <remarks>This property is deprecated, use TurnPath.Interrupted instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.DIALOGEVENT">
            <summary>
            The current dialog event (set during event processing).
            </summary>
            <remarks>This property is deprecated, use TurnPath.DialogEvent instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.REPEATEDIDS">
            <summary>
            Used to track that we don't end up in infinite loop of RepeatDialogs().
            </summary>
            <remarks>This property is deprecated, use TurnPath.RepeatedIds instead.</remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.TurnPath.ACTIVITYPROCESSED">
            <summary>
            This is a bool which if set means that the turncontext.activity has been consumed by some component in the system.
            </summary>
            <remarks>This property is deprecated, use TurnPath.ActivityProcessed instead.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.TurnPath.GetPropertyName(System.String)">
            <summary>
            Utility function to get just the property name without the memory scope prefix.
            </summary>
            <param name="property">memory scope property path.</param>
            <returns>name of the property without the prefix.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ObjectPath">
            <summary>
            Helper methods for working with dynamic json objects.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.HasValue(System.Object,System.String)">
            <summary>
            Does an object have a subpath.
            </summary>
            <param name="obj">object.</param>
            <param name="path">path to evaluate.</param>
            <returns>true if the path is there.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.GetPathValue``1(System.Object,System.String)">
            <summary>
            Get the value for a path relative to an object.
            </summary>
            <typeparam name="T">type to return.</typeparam>
            <param name="obj">object to start with.</param>
            <param name="path">path to evaluate.</param>
            <returns>value or default(T).</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.GetPathValue``1(System.Object,System.String,``0)">
            <summary>
            Get the value for a path relative to an object.
            </summary>
            <typeparam name="T">type to return.</typeparam>
            <param name="obj">object to start with.</param>
            <param name="path">path to evaluate.</param>
            <param name="defaultValue">default value to use if any part of the path is missing.</param>
            <returns>value or default(T).</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.TryGetPathValue``1(System.Object,System.String,``0@)">
            <summary>
            Get the value for a path relative to an object.
            </summary>
            <typeparam name="T">type to return.</typeparam>
            <param name="obj">object to start with.</param>
            <param name="path">path to evaluate.</param>
            <param name="value">value for the path.</param>
            <returns>true if successful.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.SetPathValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Given an object evaluate a path to set the value.
            </summary>
            <param name="obj">object to start with.</param>
            <param name="path">path to evaluate.</param>
            <param name="value">value to store.</param>
            <param name="json">if true, sets the value as primitive JSON objects.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.RemovePathValue(System.Object,System.String)">
            <summary>
            Remove path from object.
            </summary>
            <param name="obj">Object to change.</param>
            <param name="path">Path to remove.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.ForEachProperty(System.Object,System.Action{System.String,System.Object})">
            <summary>
            Apply an action to all properties in an object.
            </summary>
            <param name="obj">Object to map against.</param>
            <param name="action">Action to take.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.GetProperties(System.Object)">
            <summary>
            Get all properties in an object.
            </summary>
            <param name="obj">Object to enumerate property names.</param>
            <returns>enumeration of property names on the object if it is not a value type.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.ContainsProperty(System.Object,System.String)">
            <summary>
            Detects if property exists on object.
            </summary>
            <param name="obj">object.</param>
            <param name="name">name of the property.</param>
            <returns>true if found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.Clone``1(``0)">
            <summary>
            Clone an object.
            </summary>
            <typeparam name="T">Type to clone.</typeparam>
            <param name="obj">The object.</param>
            <returns>The object as Json.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.Merge``1(``0,``0)">
            <summary>
            Equivalent to javascripts ObjectPath.Assign, creates a new object from startObject overlaying any non-null values from the overlay object.
            </summary>
            <typeparam name="T">The object type.</typeparam>
            <param name="startObject">Intial object.</param>
            <param name="overlayObject">Overlay object.</param>
            <returns>merged object.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.Assign``1(System.Object,System.Object)">
            <summary>
            Equivalent to javascripts ObjectPath.Assign, creates a new object from startObject overlaying any non-null values from the overlay object.
            </summary>
            <typeparam name="T">The target type.</typeparam>
            <param name="startObject">intial object of any type.</param>
            <param name="overlayObject">overlay object of any type.</param>
            <returns>merged object.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.Assign(System.Object,System.Object,System.Type)">
            <summary>
            Equivalent to javascripts ObjectPath.Assign, creates a new object from startObject overlaying any non-null values from the overlay object.
            </summary>
            <param name="startObject">intial object of any type.</param>
            <param name="overlayObject">overlay object of any type.</param>
            <param name="type">type to output.</param>
            <returns>merged object.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.MapValueTo``1(System.Object)">
            <summary>
            Convert a generic object to a typed object.
            </summary>
            <typeparam name="T">type to convert to.</typeparam>
            <param name="val">value to convert.</param>
            <returns>converted value.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.TryResolvePath(System.Object,System.String,System.Collections.Generic.List{System.Object}@,System.Boolean)">
            <summary>
            Given an root object and property path, resolve to a constant if eval = true or a constant path otherwise.  
            conversation[user.name][user.age] => ['conversation', 'joe', 32].
            </summary>
            <param name="obj">root object.</param>
            <param name="propertyPath">property path to resolve.</param>
            <param name="segments">Path segments.</param>
            <param name="eval">True to evaluate resulting segments.</param>
            <returns>True if it was able to resolve all nested references.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.GetObjectProperty(System.Object,System.String)">
            <summary>
            Get a property or array element from an object.
            </summary>
            <param name="obj">object.</param>
            <param name="property">property or array segment to get relative to the object.</param>
            <returns>the value or null if not found.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.SetObjectSegment(System.Object,System.Object,System.Object,System.Boolean)">
            <summary>
            Given an object, set a property or array element on it with a value.
            </summary>
            <param name="obj">object to modify.</param>
            <param name="segment">property or array segment to put the value in.</param>
            <param name="value">value to store.</param>
            <param name="json">if true, value will be normalized to JSON primitive objects.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ObjectPath.GetNormalizedValue(System.Object,System.Boolean)">
            <summary>
            Normalize value as json objects.
            </summary>
            <param name="value">value to normalize.</param>
            <param name="json">normalize as json objects.</param>
            <returns>normalized value.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1">
            <summary>
            Bridge class to allow <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/> to be backward compatible with <see cref="T:Microsoft.Bot.Builder.ComponentRegistration"/>.
            </summary>
            <typeparam name="TComponent">The type of <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/> to bridge into legacy <see cref="T:Microsoft.Bot.Builder.ComponentRegistration"/>.</typeparam>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.#ctor(`0,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1"/> class.
            </summary>
            <param name="botComponent"><see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/> to be exposed as a legacy <see cref="T:Microsoft.Bot.Builder.ComponentRegistration"/>.</param>
            <param name="configuration">Optional <see cref="T:Microsoft.Extensions.Configuration.IConfiguration"/> for the target <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/>.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent">
            <summary>
            Gets <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/> to be bridged to the legacy <see cref="T:Microsoft.Bot.Builder.ComponentRegistration"/>.
            </summary>
            <value>
            <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/> to be bridged to the legacy <see cref="T:Microsoft.Bot.Builder.ComponentRegistration"/>.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.GetMemoryScopes">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.GetPathResolvers">
            <inheritdoc/>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.GetFromComponent``1(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Calls startup on the <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/> to retrieve a collection of registrations for type <typeparamref name="TRegistration"/>.
            </summary>
            <typeparam name="TRegistration">The type of registration to get from the <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/>.</typeparam>
            <param name="services">Optional initial <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection"/> to pass to the <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/>. If not provided, an empty <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceCollection"/> is used.</param>
            <returns>The collection of <typeparamref name="TRegistration"/> registrations applied by the <see cref="P:Microsoft.Bot.Builder.Dialogs.Obsolete.ComponentRegistrationBridge`1.BotComponent"/>.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter">
            <summary>
            Represents a dialog manager adapter that can connect a dialog manager to a service endpoint.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter.Activities">
            <summary>
            Gets the list of activities.
            </summary>
            <value>The list of activities.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter.SendActivitiesAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity[],System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, sends activities to the conversation.
            </summary>
            <param name="turnContext">The context object for the turn.</param>
            <param name="activities">The activities to send.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>If the activities are successfully sent, the task result contains
            an array of <see cref="T:Microsoft.Bot.Schema.ResourceResponse"/> objects containing the IDs that
            the receiving channel assigned to the activities.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter.UpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, replaces an existing activity in the
            conversation.
            </summary>
            <param name="turnContext">The context object for the turn.</param>
            <param name="activity">New replacement activity.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>This method is not implemented.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DialogManagerAdapter.DeleteActivityAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.ConversationReference,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, deletes an existing activity in the
            conversation.
            </summary>
            <param name="turnContext">The context object for the turn.</param>
            <param name="reference">Conversation reference for the activity to delete.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>This method is not implemented.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.PersistedState">
            <summary>
            Represents the persisted data across turns.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.PersistedState.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.PersistedState"/> class.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.PersistedState.#ctor(Microsoft.Bot.Builder.Dialogs.PersistedStateKeys,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.PersistedState"/> class.
            </summary>
            <param name="keys">The persisted keys.</param>
            <param name="data">The data containing the state values.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PersistedState.UserState">
            <summary>
            Gets or sets the user profile data.
            </summary>
            <value>The user profile data.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PersistedState.ConversationState">
            <summary>
            Gets or sets the dialog state data.
            </summary>
            <value>The dialog state data.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.PersistedStateKeys">
            <summary>
            These are the keys which are persisted.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PersistedStateKeys.UserState">
            <summary>
            Gets or sets the key for the user state.
            </summary>
            <value>The key for the user state.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PersistedStateKeys.ConversationState">
            <summary>
            Gets or sets the key for the conversation state.
            </summary>
            <value>The key for the conversation state.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.PersistedStateKeys.GetEnumerator">
            <summary>
            Gets the collection of persisted state keys.
            </summary>
            <returns>A collection of persisted state keys.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ActivityPrompt">
            <summary>
            Defines the core behavior of a prompt dialog that waits for an activity to be received.
            </summary>
            <remarks>
            This prompt requires a validator be passed in and is useful when waiting for non-message
            activities like an event to be received.The validator can ignore received activities until
            the expected activity type is received.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{Microsoft.Bot.Schema.Activity})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.ActivityPrompt"/> class.
            Called from constructors in derived classes to initialize the <see cref="T:Microsoft.Bot.Builder.Dialogs.ActivityPrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">A <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains
            validation for this prompt.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog is pushed onto the dialog stack and is being activated.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="options">Optional, additional information to pass to the prompt being started.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the prompt is still
            active after the turn has been processed by the prompt.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog is the active dialog and the user replied with a new activity.
            </summary>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.
            <para>The prompt generally continues to receive the user's replies until it accepts the
            user's reply as valid input for the prompt.</para></remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog resumes being the active dialog on the dialog stack, such as
            when the previous active dialog on the stack completes.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="reason">An enum indicating why the dialog resumed.</param>
            <param name="result">Optional, value returned from the previous dialog on the stack.
            The type of the value returned is dependent on the previous dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog has been requested to re-prompt the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="instance">The instance of the dialog on the stack.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">A <see cref="T:System.Boolean"/> representing if the prompt is a retry.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ActivityPrompt.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, attempts to recognize the incoming activity.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.AttachmentPrompt">
            <summary>
            Prompts a user to upload attachments, like images.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.AttachmentPrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{System.Collections.Generic.IList{Microsoft.Bot.Schema.Attachment}})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.AttachmentPrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.AttachmentPrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.AttachmentPrompt.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Attempts to recognize the user's input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ChoicePrompt">
            <summary>
            Prompts a user to select from a list of choices.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ChoicePrompt._choiceDefaults">
            <summary>
            A dictionary of Default Choices based on <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.GetSupportedCultures"/>.
            Can be replaced by user using the constructor that contains choiceDefaults.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.ChoicePrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <param name="defaultLocale">Optional, the default locale used to determine language-specific behavior of the prompt.
            The locale is a 2, 3, or 4 character ISO 639 code that represents a language or language family.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.
            <para>If the <see cref="P:Microsoft.Bot.Schema.Activity.Locale"/>
            of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.<see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/>.<see cref="P:Microsoft.Bot.Builder.ITurnContext.Activity"/>
            is specified, then that local is used to determine language specific behavior; otherwise
            the <paramref name="defaultLocale"/> is used. US-English is the used if no language or
            default locale is available, or if the language or locale is not otherwise supported.</para></remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions},Microsoft.Bot.Builder.Dialogs.PromptValidator{Microsoft.Bot.Builder.Dialogs.Choices.FoundChoice},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.ChoicePrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <param name="defaultLocale">Optional, the default locale used to determine language-specific behavior of the prompt.
            The locale is a 2, 3, or 4 character ISO 639 code that represents a language or language family.</param>
            <param name="choiceDefaults">Overrides the dictionary of Bot Framework SDK-supported _choiceDefaults (for prompt localization).
            Must be passed in to each ConfirmPrompt that needs the custom choice defaults.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.
            <para>If the <see cref="P:Microsoft.Bot.Schema.Activity.Locale"/>
            of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.<see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/>.<see cref="P:Microsoft.Bot.Builder.ITurnContext.Activity"/>
            is specified, then that local is used to determine language specific behavior; otherwise
            the <paramref name="defaultLocale"/> is used. US-English is the used if no language or
            default locale is available, or if the language or locale is not otherwise supported.</para></remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.Style">
            <summary>
            Gets or sets the style to use when presenting the prompt to the user.
            </summary>
            <value>The style to use when presenting the prompt to the user.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.DefaultLocale">
            <summary>
            Gets or sets the default locale used to determine language-specific behavior of the prompt.
            </summary>
            <value>The default locale used to determine language-specific behavior of the prompt.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.ChoiceOptions">
            <summary>
            Gets or sets additional options passed to the <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory"/> and used to tweak
            the style of choices rendered to the user.
            </summary>
            <value>Additional options for presenting the set of choices.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.RecognizerOptions">
            <summary>
            Gets or sets additional options passed to the underlying
            <see cref="M:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceRecognizers.RecognizeChoices(System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},Microsoft.Bot.Builder.Dialogs.Choices.FindChoicesOptions)"/> method.
            </summary>
            <value>Options to control the recognition strategy.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true  if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Attempts to recognize the user's input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt">
            <summary>
            Prompts a user to confirm something with a yes/no response.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt._choiceDefaults">
            <summary>
            A dictionary of Default Choices based on <seealso cref="M:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.GetSupportedCultures"/>.
            Can be replaced by user using the constructor that contains choiceDefaults.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <param name="defaultLocale">Optional, the default locale used to determine language-specific behavior of the prompt.
            The locale is a 2, 3, or 4 character ISO 639 code that represents a language or language family.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.
            <para>If the <see cref="P:Microsoft.Bot.Schema.Activity.Locale"/>
            of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.<see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/>.<see cref="P:Microsoft.Bot.Builder.ITurnContext.Activity"/>
            is specified, then that local is used to determine language specific behavior; otherwise
            the <paramref name="defaultLocale"/> is used. US-English is the used if no language or
            default locale is available, or if the language or locale is not otherwise supported.</para></remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.ValueTuple{Microsoft.Bot.Builder.Dialogs.Choices.Choice,Microsoft.Bot.Builder.Dialogs.Choices.Choice,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions}},Microsoft.Bot.Builder.Dialogs.PromptValidator{System.Boolean},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <param name="defaultLocale">Optional, the default locale used to determine language-specific behavior of the prompt.
            The locale is a 2, 3, or 4 character ISO 639 code that represents a language or language family.</param>
            <param name="choiceDefaults">Overrides the dictionary of Bot Framework SDK-supported _choiceDefaults (for prompt localization).
            Must be passed in to each ConfirmPrompt that needs the custom choice defaults.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.
            <para>If the <see cref="P:Microsoft.Bot.Schema.Activity.Locale"/>
            of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.<see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/>.<see cref="P:Microsoft.Bot.Builder.ITurnContext.Activity"/>
            is specified, then that local is used to determine language specific behavior; otherwise
            the <paramref name="defaultLocale"/> is used. US-English is the used if no language or
            default locale is available, or if the language or locale is not otherwise supported.</para></remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.Style">
            <summary>
            Gets or sets the style of the yes/no choices rendered to the user when prompting.
            </summary>
            <value>
            The style of the yes/no choices rendered to the user when prompting.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.DefaultLocale">
            <summary>
            Gets or sets the default locale used to determine language-specific behavior of the prompt.
            </summary>
            <value>The default locale used to determine language-specific behavior of the prompt.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.ChoiceOptions">
            <summary>
            Gets or sets additional options passed to the <seealso cref="T:Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactory"/>
            and used to tweak the style of choices rendered to the user.
            </summary>
            <value>Additional options for presenting the set of choices.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.ConfirmChoices">
            <summary>
            Gets or sets the yes and no <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.Choice"/> for the prompt.
            </summary>
            <value>The yes and no <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.Choice"/> for the prompt.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.ConfirmPrompt.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Attempts to recognize the user's input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DateTimePrompt">
            <summary>
            Prompts a user for a date-time value.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DateTimePrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.DateTimeResolution}},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DateTimePrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <param name="defaultLocale">Optional, the default locale used to determine language-specific behavior of the prompt.
            The locale is a 2, 3, or 4 character ISO 639 code that represents a language or language family.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.
            <para>If the <see cref="P:Microsoft.Bot.Schema.Activity.Locale"/>
            of the <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/>.<see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/>.<see cref="P:Microsoft.Bot.Builder.ITurnContext.Activity"/>
            is specified, then that local is used to determine language specific behavior; otherwise
            the <paramref name="defaultLocale"/> is used. US-English is the used if no language or
            default locale is available, or if the language or locale is not otherwise supported.</para></remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DateTimePrompt.DefaultLocale">
            <summary>
            Gets or sets the default locale used to determine language-specific behavior of the prompt.
            </summary>
            <value>The default locale used to determine language-specific behavior of the prompt.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DateTimePrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.DateTimePrompt.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Attempts to recognize the user's input as a date-time value.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.DateTimeResolution">
            <summary>
            A date-time value, as recognized by the <see cref="T:Microsoft.Bot.Builder.Dialogs.DateTimePrompt"/>.
            </summary>
            <remarks>A value can represent a date, a time, a date and time, or a range of any of these.
            The representation of the value is determined by the locale used to parse the input.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DateTimeResolution.Value">
            <summary>
            Gets or sets a human-readable represntation of the value, for a non-range result.
            </summary>
            <value>A human-readable represntation of the value, for a non-range result.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DateTimeResolution.Start">
            <summary>
            Gets or sets a human-readable represntation of the start value, for a range result.
            </summary>
            <value>
            A human-readable represntation of the start value, for a range result.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DateTimeResolution.End">
            <summary>
            Gets or sets a human-readable represntation of the end value, for a range result.
            </summary>
            <value>
            A human-readable represntation of the end value, for a range result.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.DateTimeResolution.Timex">
            <summary>
            Gets or sets the value in TIMEX format.
            </summary>
            <value>A TIMEX representation of the value.</value>
            <remarks>The TIMEX format that follows the ISO 8601 standard.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.NumberPrompt`1">
            <summary>
            Prompts a user to enter a number.
            </summary>
            <typeparam name="T">The type of input expected.</typeparam>
            <remarks>The number prompt currently supports these types:
            <see cref="T:System.Single"/>, <see cref="T:System.Int32"/>, <see cref="T:System.Int64"/>, <see cref="T:System.Double"/>, and
            <see cref="T:System.Decimal"/>.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.NumberPrompt`1.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{`0},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.NumberPrompt`1"/> class.
            </summary>
            <param name="dialogId">Unique ID of the dialog within its parent <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/>.</param>
            <param name="validator">Validator that will be called each time the user responds to the prompt.</param>
            <param name="defaultLocale">Locale to use.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.NumberPrompt`1.DefaultLocale">
            <summary>
            Gets or sets the default locale used to determine language-specific behavior of the prompt.
            </summary>
            <value>The default locale used to determine language-specific behavior of the prompt.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.NumberPrompt`1.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.NumberPrompt`1.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Attempts to recognize the user's input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt">
             <summary>
             Creates a new prompt that asks the user to sign in using the Bot Frameworks Single Sign On (SSO)
             service.
             </summary>
             <remarks>
             The prompt will attempt to retrieve the users current token and if the user isn't signed in, it
             will send them an `OAuthCard` containing a button they can press to signin. Depending on the
             channel, the user will be sent through one of two possible signin flows:
            
             - The automatic signin flow where once the user signs in and the SSO service will forward the bot
             the users access token using either an `event` or `invoke` activity.
             - The "magic code" flow where once the user signs in they will be prompted by the SSO
             service to send the bot a six digit code confirming their identity. This code will be sent as a
             standard `message` activity.
            
             Both flows are automatically supported by the `OAuthPrompt` and the only thing you need to be
             careful of is that you don't block the `event` and `invoke` activities that the prompt might
             be waiting on.
            
             <blockquote>
             **Note**:
             You should avoid persisting the access token with your bots other state. The Bot Frameworks
             SSO service will securely store the token on your behalf. If you store it in your bots state
             it could expire or be revoked in between turns.
            
             When calling the prompt from within a waterfall step you should use the token within the step
             following the prompt and then let the token go out of scope at the end of your function.
             </blockquote>
            
             ## Prompt Usage
            
             When used with your bot's <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> you can simply add a new instance of the prompt as a named
             dialog using <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogSet.Add(Microsoft.Bot.Builder.Dialogs.Dialog)"/>. You can then start the prompt from a waterfall step using either
             <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/> or
             <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>. The user
             will be prompted to signin as needed and their access token will be passed as an argument to
             the callers next waterfall step.
             </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings,Microsoft.Bot.Builder.Dialogs.PromptValidator{Microsoft.Bot.Schema.TokenResponse})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="settings">Additional OAuth settings to use with this instance of the prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.SendOAuthCardAsync(Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings,Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.IMessageActivity,System.Threading.CancellationToken)">
            <summary>
            Shared implementation of the SendOAuthCardAsync function. This is intended for internal use, to
            consolidate the implementation of the OAuthPrompt and OAuthInput. Application logic should use
            those dialog classes.
            </summary>
            <param name="settings">OAuthSettings.</param>
            <param name="turnContext">ITurnContext.</param>
            <param name="prompt">IMessageActivity.</param>
            <param name="cancellationToken">CancellationToken.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the result of the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.RecognizeTokenAsync(Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings,Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Shared implementation of the RecognizeTokenAsync function. This is intended for internal use, to
            consolidate the implementation of the OAuthPrompt and OAuthInput. Application logic should use
            those dialog classes.
            </summary>
            <param name="settings">OAuthPromptSettings.</param>
            <param name="dc">DialogContext.</param>
            <param name="cancellationToken">CancellationToken.</param>
            <returns>PromptRecognizerResult.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.SetCallerInfoInDialogState(System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.ITurnContext)">
            <summary>
            Shared implementation of the SetCallerInfoInDialogState function. This is intended for internal use, to
            consolidate the implementation of the OAuthPrompt and OAuthInput. Application logic should use
            those dialog classes.
            </summary>
            <param name="state">The dialog state.</param>
            <param name="context">ITurnContext.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog is pushed onto the dialog stack and is being activated.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="options">Optional, additional information to pass to the prompt being started.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the prompt is still
            active after the turn has been processed by the prompt.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog is the active dialog and the user replied with a new activity.
            </summary>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.
            <para>The prompt generally continues to receive the user's replies until it accepts the
            user's reply as valid input for the prompt.</para></remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.GetUserTokenAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)">
            <summary>
            Attempts to get the user's token.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>If the task is successful and user already has a token or the user successfully signs in,
            the result contains the user's token.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.OAuthPrompt.SignOutUserAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)">
            <summary>
            Signs out the user.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings">
            <summary>
            Contains settings for an <see cref="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings.OAuthAppCredentials">
            <summary>
            Gets or sets the OAuthAppCredentials for OAuthPrompt.
            </summary>
            <value>The AppCredentials for OAuthPrompt.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings.ConnectionName">
            <summary>
            Gets or sets the name of the OAuth connection.
            </summary>
            <value>The name of the OAuth connection.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings.Title">
            <summary>
            Gets or sets the title of the sign-in card.
            </summary>
            <value>The title of the sign-in card.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings.Text">
            <summary>
            Gets or sets any additional text to include in the sign-in card.
            </summary>
            <value>Any additional text to include in the sign-in card.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings.Timeout">
            <summary>
            Gets or sets the number of milliseconds the prompt waits for the user to authenticate.
            Default is 900,000 (15 minutes).
            </summary>
            <value>The number of milliseconds the prompt waits for the user to authenticate.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.OAuthPromptSettings.EndOnInvalidMessage">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt"/> should end upon
            receiving an invalid message.  Generally the <see cref="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt"/> will ignore
            incoming messages from the user during the auth flow, if they are not related to the
            auth flow.  This flag enables ending the <see cref="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt"/> rather than
            ignoring the user's message.  Typically, this flag will be set to 'true', but is 'false'
            by default for backwards compatibility.
            </summary>
            <value>True if the <see cref="T:Microsoft.Bot.Builder.Dialogs.OAuthPrompt"/> should automatically end upon receiving
            an invalid message.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Prompt`1">
            <summary>
            Defines the core behavior of prompt dialogs.
            </summary>
            <typeparam name="T">The type of value the prompt returns.</typeparam>
            <remarks>When the prompt ends, it should return a <typeparamref name="T"/> object that
            represents the value that was prompted for.
            Use <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogSet.Add(Microsoft.Bot.Builder.Dialogs.Dialog)"/> or <see cref="M:Microsoft.Bot.Builder.Dialogs.ComponentDialog.AddDialog(Microsoft.Bot.Builder.Dialogs.Dialog)"/>
            to add a prompt to a dialog set or component dialog, respectively.
            Use <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/> or
            <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.BeginDialogAsync(System.String,System.Object,System.Threading.CancellationToken)"/> to start the prompt.
            If you start a prompt from a <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallStep"/> in a <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallDialog"/>,
            then the prompt result will be available in the next step of the waterfall.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1"/> class.
            Called from constructors in derived classes to initialize the <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog is pushed onto the dialog stack and is being activated.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="options">Optional, additional information to pass to the prompt being started.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the prompt is still
            active after the turn has been processed by the prompt.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog is the active dialog and the user replied with a new activity.
            </summary>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.
            <para>The prompt generally continues to receive the user's replies until it accepts the
            user's reply as valid input for the prompt.</para></remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog resumes being the active dialog on the dialog stack, such as
            when the previous active dialog on the stack completes.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="reason">An enum indicating why the dialog resumed.</param>
            <param name="result">Optional, value returned from the previous dialog on the stack.
            The type of the value returned is dependent on the previous dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)">
            <summary>
            Called when a prompt dialog has been requested to re-prompt the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="instance">The instance of the dialog on the stack.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.OnPreBubbleEventAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogEvent,System.Threading.CancellationToken)">
            <summary>
            Called before an event is bubbled to its parent.
            </summary>
            <remarks>
            This is a good place to perform interception of an event as returning `true` will prevent
            any further bubbling of the event to the dialogs parents and will also prevent any child
            dialogs from performing their default processing.
            </remarks>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="e">The event being raised.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns> Whether the event is handled by the current dialog and further processing should stop.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true if this is the first time this prompt dialog instance
            is on the stack is prompting the user for input; otherwise, false. Determines whether
            <see cref="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.Prompt"/> or <see cref="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.RetryPrompt"/> should be used.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, attempts to recognize the user's input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompt`1.AppendChoices(Microsoft.Bot.Schema.IMessageActivity,System.String,System.Collections.Generic.IList{Microsoft.Bot.Builder.Dialogs.Choices.Choice},Microsoft.Bot.Builder.Dialogs.Choices.ListStyle,Microsoft.Bot.Builder.Dialogs.Choices.ChoiceFactoryOptions,System.Threading.CancellationToken)">
            <summary>
            When overridden in a derived class, appends choices to the activity when the user is prompted for input.
            </summary>
            <param name="prompt">The activity to append the choices to.</param>
            <param name="channelId">The ID of the user's channel.</param>
            <param name="choices">The choices to append.</param>
            <param name="style">Indicates how the choices should be presented to the user.</param>
            <param name="options">The formatting options to use when presenting the choices.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result contains the updated activity.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel">
            <summary>
            Culture model used in Choice and Confirm Prompts.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel.Locale">
            <summary>
            Gets or Sets Culture Model's Locale.
            </summary>
            <value>
            Example: "en-US".
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel.Separator">
            <summary>
            Gets or Sets Culture Model's InlineSeparator.
            </summary>
            <value>
            Example: ", ".
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel.InlineOr">
            <summary>
            Gets or Sets Culture Model's InlineOr.
            </summary>
            <value>
            Example: " or ".
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel.InlineOrMore">
            <summary>
            Gets or Sets Culture Model's InlineOrMore.
            </summary>
            <value>
            Example: ", or ".
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel.YesInLanguage">
            <summary>
            Gets or Sets Equivalent of "Yes" in Culture Model's Language.
            </summary>
            <value>
            Example: "Yes".
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel.NoInLanguage">
            <summary>
            Gets or Sets Equivalent of "No" in Culture Model's Language.
            </summary>
            <value>
            Example: "No".
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels">
            <summary>
            Class container for currently-supported Culture Models in Confirm and Choice Prompt.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Bulgarian">
            <summary>
            Gets the bulgarian prompt culture model.
            </summary>
            <value>Bulgarian prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Chinese">
            <summary>
            Gets the chinese prompt culture model.
            </summary>
            <value>Chinese prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Dutch">
            <summary>
            Gets the dutch prompt culture model.
            </summary>
            <value>Dutch prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.English">
            <summary>
            Gets the english prompt culture model.
            </summary>
            <value>English prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.French">
            <summary>
            Gets the french prompt culture model.
            </summary>
            <value>French prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.German">
            <summary>
            Gets the german prompt culture model.
            </summary>
            <value>German prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Hindi">
            <summary>
            Gets the hindi prompt culture model.
            </summary>
            <value>Hindi prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Italian">
            <summary>
            Gets the italian prompt culture model.
            </summary>
            <value>Italian prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Japanese">
            <summary>
            Gets the japanese prompt culture model.
            </summary>
            <value>Japanese prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Korean">
            <summary>
            Gets the korean prompt culture model.
            </summary>
            <value>Korean prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Portuguese">
            <summary>
            Gets the portuguese prompt culture model.
            </summary>
            <value>Portuguese prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Spanish">
            <summary>
            Gets the spanish prompt culture model.
            </summary>
            <value>Spanish prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Swedish">
            <summary>
            Gets the swedish prompt culture model.
            </summary>
            <value>Swedish prompt culture model.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.Turkish">
            <summary>
            Gets the turkish prompt culture model.
            </summary>
            <value>Turkish prompt culture model.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.MapToNearestLanguage(System.String)">
            <summary>
            Use Recognizers-Text to normalize various potential Locale strings to a standard.
            </summary>
            <remarks>
            This is mostly a copy/paste from https://github.com/microsoft/Recognizers-Text/blob/master/.NET/Microsoft.Recognizers.Text/Culture.cs#L66
            This doesn't directly use Recognizers-Text's MapToNearestLanguage because if they add language support before we do, it will break our prompts.
            </remarks>
            <param name="cultureCode">Represents locale. Examples: "en-US, en-us, EN".</param>
            <returns>Normalized locale.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModels.GetSupportedCultures">
            <summary>
            Gets a list of the supported culture models.
            </summary>
            <returns>Array of <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompts.PromptCultureModel"/> with the supported cultures.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.PromptOptions">
            <summary>
            Contains settings to pass to a <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1"/> when the prompt is started.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.Prompt">
            <summary>
            Gets or sets the initial prompt to send the user as an <see cref="T:Microsoft.Bot.Schema.Activity"/>.
            </summary>
            <value>
            The initial prompt to send the user as and <see cref="T:Microsoft.Bot.Schema.Activity"/>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.RetryPrompt">
            <summary>
            Gets or sets the retry prompt to send the user as and <see cref="T:Microsoft.Bot.Schema.Activity"/>.
            </summary>
            <value>
            The retry prompt to send the user as an <see cref="T:Microsoft.Bot.Schema.Activity"/>.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.Choices">
            <summary>
            Gets or sets a list of choices for the user to choose from, for use with a <see cref="T:Microsoft.Bot.Builder.Dialogs.ChoicePrompt"/>.
            </summary>
            <value>The list of available choices.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.Style">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Bot.Builder.Dialogs.Choices.ListStyle"/> for a <see cref="T:Microsoft.Bot.Builder.Dialogs.ChoicePrompt"/>.
            </summary>
            <value>The list style to use when presenting a choice prompt.</value>
            <remarks>
            This property can be used to override or set the value of <see cref="P:Microsoft.Bot.Builder.Dialogs.ChoicePrompt.Style"/> property
            when the prompt is started using <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.
            </remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptOptions.Validations">
            <summary>
            Gets or sets additional options for use with any <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> attached to the prompt.
            </summary>
            <value>Additional options for use with a prompt validator.</value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1">
            <summary>
            Contains the result returned by the recognition method of a <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1"/>.
            </summary>
            <typeparam name="T">The type of value the prompt returns.</typeparam>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1"/> class.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1.Succeeded">
            <summary>
            Gets or sets a value indicating whether the recognition attempt succeeded.
            </summary>
            <value>True if the recognition attempt succeeded; otherwise, false.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1.Value">
            <summary>
            Gets or sets the recognition value.
            </summary>
            <value>If <see cref="P:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1.Succeeded"/> is true, the recognition result from the prompt.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1.AllowInterruption">
            <summary>
            Gets or sets a value indicating whether flag indicating whether or not parent dialogs should be allowed to interrupt the prompt.
            </summary>
            <value>
            The default value is `false`.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1">
            <summary>
            The delegate definition for custom prompt validators. Implement this function to add custom validation to a prompt.
            </summary>
            <typeparam name="T">The type the associated <see cref="T:Microsoft.Bot.Builder.Dialogs.Prompt`1"/> prompts for.</typeparam>
            <param name="promptContext">The prompt validation context.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of bool representing the asynchronous operation indicating validation success or failure.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1">
            <summary>
            Contains context information for a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/>.
            </summary>
            <typeparam name="T">The type of value the prompt returns.</typeparam>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1.Context">
            <summary>
            Gets the <see cref="T:Microsoft.Bot.Builder.TurnContext"/> for the current turn of conversation with the user.
            </summary>
            <value>Context for the current turn of conversation with the user.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1.Recognized">
            <summary>
            Gets the <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptRecognizerResult`1"/> returned from the prompt's recognition attempt.
            </summary>
            <value>The recognition results from the prompt's recognition attempt.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1.Options">
            <summary>
            Gets the <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptOptions"/> used for this recognition attempt.
            </summary>
            <value>The prompt options used for this recognition attempt.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1.State">
            <summary>
            Gets state for the associated prompt instance.
            </summary>
            <value>State for the associated prompt instance.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.PromptValidatorContext`1.AttemptCount">
            <summary>
            Gets the number of times this instance of the prompt has been executed.
            </summary>
            <value>A number indicating how many times the prompt was invoked (starting at 1 for the first time it was called).</value>
            <remarks>This count is set when the prompt is added to the dialog stack.</remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.TextPrompt">
            <summary>
            Prompts the user for text input.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.TextPrompt.#ctor(System.String,Microsoft.Bot.Builder.Dialogs.PromptValidator{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.TextPrompt"/> class.
            </summary>
            <param name="dialogId">The ID to assign to this prompt.</param>
            <param name="validator">Optional, a <see cref="T:Microsoft.Bot.Builder.Dialogs.PromptValidator`1"/> that contains additional,
            custom validation for this prompt.</param>
            <remarks>The value of <paramref name="dialogId"/> must be unique within the
            <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogSet"/> or <see cref="T:Microsoft.Bot.Builder.Dialogs.ComponentDialog"/> to which the prompt is added.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.TextPrompt.OnPromptAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Prompts the user for input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="isRetry">true if this is the first time this prompt dialog instance
            on the stack is prompting the user for input; otherwise, false.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.TextPrompt.OnRecognizeAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IDictionary{System.String,System.Object},Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)">
            <summary>
            Attempts to recognize the user's input.
            </summary>
            <param name="turnContext">Context for the current turn of conversation with the user.</param>
            <param name="state">Contains state for the current instance of the prompt on the dialog stack.</param>
            <param name="options">A prompt options object constructed from the options initially provided
            in the call to <see cref="M:Microsoft.Bot.Builder.Dialogs.DialogContext.PromptAsync(System.String,Microsoft.Bot.Builder.Dialogs.PromptOptions,System.Threading.CancellationToken)"/>.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result describes the result of the recognition attempt.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.TextPrompt.OnPreBubbleEventAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogEvent,System.Threading.CancellationToken)">
            <summary>
            Called before an event is bubbled to its parent.
            </summary>
            <remarks>
            This is a good place to perform interception of an event as returning `true` will prevent
            any further bubbling of the event to the dialogs parents and will also prevent any child
            dialogs from performing their default processing.
            </remarks>
            <param name="dc">The dialog context for the current turn of conversation.</param>
            <param name="e">The event being raised.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <returns> Whether the event is handled by the current dialog and further processing should stop.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.Recognizer">
            <summary>
            Recognizer base class.
            </summary>
            <remarks>
            Recognizers operate in a DialogContext environment to recognize user input into Intents and Entities. 
            This class models 3 virtual methods around
            * Pure DialogContext (where the recognition happens against current state dialogcontext
            * Activity (where the recognition is from an Activity)
            * Text/Locale (where the recognition is from text/locale)
            The default implementation of DialogContext method is to use Context.Activity and call the activity method.
            The default implementation of Activity method is to filter to Message activities and pull out text/locale and call the text/locale method.
            </remarks>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Recognizer.ChooseIntent">
            <summary>
            Intent name that will be produced by this recognizer if the child recognizers do not have consensus for intents.
            </summary>
        </member>
        <member name="F:Microsoft.Bot.Builder.Dialogs.Recognizer.NoneIntent">
            <summary>
            Standard none intent that means none of the recognizers recognize the intent.
            </summary>
            <remarks>
            If each recognizer returns no intents or None intents, then this recognizer will return None intent.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Recognizer.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.Recognizer"/> class to recognize user input.
            </summary>
            <param name="callerPath">The source file path of the caller.</param>
            <param name="callerLine">The line number on the source file where the method is called.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Recognizer.Id">
            <summary>
            Gets or sets id of the recognizer.
            </summary>
            <value>Id.</value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.Recognizer.TelemetryClient">
            <summary>
            Gets or sets the currently configured <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> that logs the RecognizerResult event.
            </summary>
            <value>The <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient"/> being used to log events.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Recognizer.RecognizeAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Runs current DialogContext.TurnContext.Activity through a recognizer and returns a generic recognizer result.
            </summary>
            <param name="dialogContext">Dialog context.</param>
            <param name="activity">activity to recognize.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <param name="telemetryProperties">Additional properties to be logged to telemetry with the LuisResult event.</param>
            <param name="telemetryMetrics">Additional metrics to be logged to telemetry with the LuisResult event.</param>
            <returns>Analysis of utterance.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Recognizer.RecognizeAsync``1(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Runs current DialogContext.TurnContext.Activity through a recognizer and returns a strongly-typed recognizer result using IRecognizerConvert.
            </summary>
            <typeparam name="T">The recognition result type.</typeparam>
            <param name="dialogContext">Dialog context.</param>
            <param name="activity">activity to recognize.</param>
            <param name="cancellationToken">Cancellation token.</param>
            <param name="telemetryProperties">Additional properties to be logged to telemetry with the LuisResult event.</param>
            <param name="telemetryMetrics">Additional metrics to be logged to telemetry with the LuisResult event.</param>
            <returns>Analysis of utterance.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Recognizer.CreateChooseIntentResult(System.Collections.Generic.Dictionary{System.String,Microsoft.Bot.Builder.RecognizerResult})">
            <summary>
            CreateChooseIntentResult - returns ChooseIntent between multiple recognizer results.
            </summary>
            <param name="recognizerResults">recognizer Id => recognizer results map.</param>
            <returns>recognizerResult which is ChooseIntent.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Recognizer.FillRecognizerResultTelemetryProperties(Microsoft.Bot.Builder.RecognizerResult,System.Collections.Generic.Dictionary{System.String,System.String},Microsoft.Bot.Builder.Dialogs.DialogContext)">
            <summary>
            Uses the RecognizerResult to create a list of properties to be included when tracking the result in telemetry.
            </summary>
            <param name="recognizerResult">Recognizer Result.</param>
            <param name="telemetryProperties">A list of properties to append or override the properties created using the RecognizerResult.</param>
            <param name="dialogContext">Dialog Context.</param>
            <returns>A dictionary that can be included when calling the TrackEvent method on the TelemetryClient.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.Recognizer.TrackRecognizerResult(Microsoft.Bot.Builder.Dialogs.DialogContext,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Tracks an event with the event name provided using the TelemetryClient attaching the properties / metrics.
            </summary>
            <param name="dialogContext">Dialog Context.</param>
            <param name="eventName">The name of the event to track.</param>
            <param name="telemetryProperties">The properties to be included as part of the event tracking.</param>
            <param name="telemetryMetrics">The metrics to be included as part of the event tracking.</param>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.SkillDialog">
            <summary>
            A specialized <see cref="T:Microsoft.Bot.Builder.Dialogs.Dialog"/> that can wrap remote calls to a skill.
            </summary>
            <remarks>
            The options parameter in <see cref="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)"/> must be a <see cref="T:Microsoft.Bot.Builder.Dialogs.BeginSkillDialogOptions"/> instance
            with the initial parameters for the dialog.
            </remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.#ctor(Microsoft.Bot.Builder.Dialogs.SkillDialogOptions,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.SkillDialog"/> class to wrap remote calls to a skill.
            </summary>
            <param name="dialogOptions">The options to execute the skill dialog.</param>
            <param name="dialogId">The id of the dialog.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialog.DialogOptions">
            <summary>
            Gets the options used to execute the skill dialog.
            </summary>
            <value>The options to execute the skill dialog.</value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when the skill dialog is started and pushed onto the dialog stack.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="options">Optional, initial information to pass to the dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Called when the skill dialog is _continued_, where it is the active dialog and the
            user replies with a new activity.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog. The result may also contain a
            return value.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.RepromptDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,System.Threading.CancellationToken)">
            <summary>
            Called when the skill dialog should re-prompt the user for input.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information for this dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a child skill dialog completed its turn, returning control to this dialog.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="reason">Reason why the dialog resumed.</param>
            <param name="result">Optional, value returned from the dialog that was called. The type
            of the value returned is dependent on the child dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)">
            <summary>
            Called when the skill dialog is ending.
            </summary>
            <param name="turnContext">The context object for this turn.</param>
            <param name="instance">State information associated with the instance of this dialog on the dialog stack.</param>
            <param name="reason">Reason why the dialog ended.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.OnValidateActivity(Microsoft.Bot.Schema.Activity)">
            <summary>
            Validates the activity sent during <see cref="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/>.
            </summary>
            <param name="activity">The <see cref="T:Microsoft.Bot.Schema.Activity"/> for the current turn of conversation.</param>
            <remarks>
            Override this method to implement a custom validator for the activity being sent during the <see cref="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)"/>.
            This method can be used to ignore activities of a certain type if needed.
            If this method returns false, the dialog will end the turn without processing the activity. 
            </remarks>
            <returns>true if the activity is valid, false if not.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.ValidateBeginDialogArgs(System.Object)">
            <summary>
            Validates the required properties are set in the options argument passed to the BeginDialog call.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.SkillDialog.InterceptOAuthCardsAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity,System.String,System.Threading.CancellationToken)">
            <summary>
            Tells is if we should intercept the OAuthCard message.
            </summary>
            <remarks>
            The SkillDialog only attempts to intercept OAuthCards when the following criteria are met:
            1. An OAuthCard was sent from the skill
            2. The SkillDialog was called with a connectionName
            3. The current adapter supports token exchange
            If any of these criteria are false, return false.
            </remarks>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions">
            <summary>
            Defines the options that will be used to execute a <see cref="T:Microsoft.Bot.Builder.Dialogs.SkillDialog"/>.
            </summary>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.BotId">
            <summary>
            Gets or sets the Microsoft app ID of the bot calling the skill.
            </summary>
            <value>
            The the Microsoft app ID of the bot calling the skill.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.SkillClient">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Bot.Builder.Skills.BotFrameworkClient"/> used to call the remote skill.
            </summary>
            <value>
            The <see cref="T:Microsoft.Bot.Builder.Skills.BotFrameworkClient"/> used to call the remote skill.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.SkillHostEndpoint">
            <summary>
            Gets or sets the callback Url for the skill host.
            </summary>
            <value>
            The callback Url for the skill host.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.Skill">
            <summary>
            Gets or sets the <see cref="T:Microsoft.Bot.Builder.Skills.BotFrameworkSkill"/> that the dialog will call.
            </summary>
            <value>
            The <see cref="T:Microsoft.Bot.Builder.Skills.BotFrameworkSkill"/> that the dialog will call.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.ConversationIdFactory">
            <summary>
            Gets or sets an instance of a <see cref="T:Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase"/> used to generate conversation IDs for interacting with the skill.
            </summary>
            <value>
            An instance of a <see cref="T:Microsoft.Bot.Builder.Skills.SkillConversationIdFactoryBase"/> used to generate conversation IDs for interacting with the skill.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.ConversationState">
            <summary>
            Gets or sets the <see cref="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.ConversationState"/> to be used by the dialog.
            </summary>
            <value>
            The <see cref="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.ConversationState"/> to be used by the dialog.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.SkillDialogOptions.ConnectionName">
            <summary>
            Gets or sets the OAuth Connection Name, that would be used to perform Single SignOn with a skill.
            </summary>
            <value>
            The OAuth Connection Name for the Parent Bot.
            </value>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.WaterfallDialog">
            <summary>
            Dialog optimized for prompting a user with a series of questions. Waterfalls accept a stack of
            functions which will be executed in sequence. Each waterfall step can ask a question of the user
            and the user's response will be passed as an argument to the next waterfall step.
            </summary>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.Bot.Builder.Dialogs.WaterfallStep})">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallDialog"/> class.
            </summary>
            <param name="dialogId">The dialog ID.</param>
            <param name="actions">Optional actions to be defined by the caller.</param>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.GetVersion">
            <summary>
            Gets a unique string which represents the version of this dialog.  If the version changes between turns the dialog system will emit a DialogChanged event.
            </summary>
            <returns>Version will change when steps count changes (because dialog has no way of evaluating the content of the steps.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.AddStep(Microsoft.Bot.Builder.Dialogs.WaterfallStep)">
            <summary>
            Adds a new step to the waterfall.
            </summary>
            <param name="step">Step to add.</param>
            <returns>Waterfall dialog for fluent calls to `AddStep()`.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.BeginDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when the waterfall dialog is started and pushed onto the dialog stack.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="options">Optional, initial information to pass to the dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.ContinueDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Threading.CancellationToken)">
            <summary>
            Called when the waterfall dialog is _continued_, where it is the active dialog and the
            user replies with a new activity.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
            <remarks>If the task is successful, the result indicates whether the dialog is still
            active after the turn has been processed by the dialog. The result may also contain a
            return value.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.ResumeDialogAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
            <summary>
            Called when a child waterfall dialog completed its turn, returning control to this dialog.
            </summary>
            <param name="dc">The dialog context for the current turn of the conversation.</param>
            <param name="reason">Reason why the dialog resumed.</param>
            <param name="result">Optional, value returned from the dialog that was called. The type
            of the value returned is dependent on the child dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> representing the asynchronous operation.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.EndDialogAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.Dialogs.DialogInstance,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Threading.CancellationToken)">
            <summary>
            Called when the dialog is ending.
            </summary>
            <param name="turnContext">Context for the current turn of the conversation.</param>
            <param name="instance">The instance of the current dialog.</param>
            <param name="reason">The reason the dialog is ending.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.OnStepAsync(Microsoft.Bot.Builder.Dialogs.WaterfallStepContext,System.Threading.CancellationToken)">
            <summary>
            Called when an individual waterfall step is being executed.
            </summary>
            <param name="stepContext">Context for the waterfall step to execute.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallDialog.RunStepAsync(Microsoft.Bot.Builder.Dialogs.DialogContext,System.Int32,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object,System.Threading.CancellationToken)">
            <summary>
            Excutes a step of the waterfall dialog.
            </summary>
            <param name="dc">The <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogContext"/> for the current turn of conversation.</param>
            <param name="index">The index of the current waterfall step to execute.</param>
            <param name="reason">The reason the waterfall step is being executed.</param>
            <param name="result">Result returned by a dialog called in the previous waterfall step.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.WaterfallStep">
            <summary>
            A delegate definition of a Waterfall step. This is implemented by application code.
            </summary>
            <param name="stepContext">The WaterfallStepContext for this waterfall dialog.</param>
            <param name="cancellationToken">The cancellation token.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/> of <see cref="T:Microsoft.Bot.Builder.Dialogs.DialogTurnResult"/> representing the asynchronous operation.</returns>
        </member>
        <member name="T:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext">
            <summary>
            Provides context for a step in a <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallDialog"/>.
            </summary>
            <remarks>The <see cref="P:Microsoft.Bot.Builder.Dialogs.DialogContext.Context"/> property contains the <see cref="T:Microsoft.Bot.Builder.ITurnContext"/>
            for the current turn.</remarks>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.#ctor(Microsoft.Bot.Builder.Dialogs.WaterfallDialog,Microsoft.Bot.Builder.Dialogs.DialogContext,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object},System.Int32,Microsoft.Bot.Builder.Dialogs.DialogReason,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext"/> class.
            </summary>
            <param name= "parentWaterfall">The parent of the waterfall dialog.</param>
            <param name= "dc">The dialog's context.</param>
            <param name= "options">Any options to call the waterfall dialog with.</param>
            <param name= "values">A dictionary of values which will be persisted across all waterfall steps.</param>
            <param name= "index">The index of the current waterfall to execute.</param>
            <param name= "reason">The reason the waterfall step is being executed.</param>
            <param name= "result">Results returned by a dialog called in the previous waterfall step.</param>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.Index">
            <summary>
            Gets the index of the current waterfall step being executed.
            </summary>
            <value>
            The index of the current waterfall step being executed.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.Options">
            <summary>
            Gets any options the waterfall dialog was called with.
            </summary>
            <value>
            Any options the waterfall dialog was called with.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.Reason">
            <summary>
            Gets the reason the waterfall step is being executed.
            </summary>
            <value>
            The reason the waterfall step is being executed.
            </value>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.Result">
            <summary>
            Gets the result from the previous waterfall step.
            </summary>
            <value>
            The result from the previous waterfall step.
            </value>
            <remarks>The result is often the return value of a child dialog that was started in
            the previous step of the waterfall.</remarks>
        </member>
        <member name="P:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.Values">
            <summary>
            Gets a dictionary of values which will be persisted across all waterfall actions.
            </summary>
            <value>
            A dictionary of values which will be persisted across all waterfall steps.
            </value>
        </member>
        <member name="M:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.NextAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            Skips to the next step of the waterfall.
            </summary>
            <param name="result">Optional, result to pass to the next step of the current waterfall dialog.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
            <returns>A task that represents the work queued to execute.</returns>
            <remarks>In the next step of the waterfall, the <see cref="P:Microsoft.Bot.Builder.Dialogs.WaterfallStepContext.Result"/> property of the
            waterfall step context will contain the value of the <paramref name="result"/>.</remarks>
        </member>
    </members>
</doc>
